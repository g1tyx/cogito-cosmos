{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/animate/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/gamelogic/notifications.ts","../../node_modules/svelte/transition/index.mjs","../../src/components/misc/Notification.svelte","../../src/components/misc/Notifications.svelte","../../src/gamelogic/utils.ts","../../src/store/customStore.ts","../../src/store/primitive/resources.ts","../../src/store/primitive/upgrades.ts","../../node_modules/tslib/tslib.es6.js","../../src/store/primitive/unlocks.ts","../../src/store/primitive/boosts.ts","../../src/store/primitive/misc.ts","../../src/store/primitive/upgradesTiered.ts","../../src/store/derived/from-primitive.ts","../../src/store/derived/higher-order.ts","../../src/store/derived/milk.ts","../../src/gamelogic/saveload.ts","../../src/components/dev/DevTools.svelte","../../src/components/dev/ToggleUnlocks.svelte","../../src/components/game-windows/window-model/Window.svelte","../../src/components/tooltips/Tooltip.svelte","../../src/components/tooltips/tooltip.ts","../../src/components/tooltips/UnlockTooltip.svelte","../../src/components/UnlockIcon.svelte","../../src/components/UnlockDrawer.svelte","../../src/components/UpgradeButton.svelte","../../src/gamelogic/buy-upgrade.ts","../../src/components/EffectComponent.svelte","../../src/components/Effect.svelte","../../src/components/game-windows/ThoughtComponent.svelte","../../src/components/misc/ProgBar.svelte","../../src/components/misc/InputRange.svelte","../../src/components/tooltips/CheeseFactoryProtocol.svelte","../../src/components/game-windows/CheeseComponent.svelte","../../src/components/game-windows/MoldyCheeseComponent.svelte","../../src/components/tooltips/MonsterBrainWaveController.svelte","../../src/components/game-windows/CheeseyardComponent.svelte","../../src/components/game-windows/MilkComponent.svelte","../../src/App.svelte","../../src/gamelogic/cheeseMonster.ts","../../src/gamelogic/gameloop.ts","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicOut } from '../easing/index.mjs';\nimport { is_function } from '../internal/index.mjs';\n\nfunction flip(node, { from, to }, params = {}) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n    const dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n    const dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\n        easing,\n        css: (t, u) => {\n            const x = u * dx;\n            const y = u * dy;\n            const sx = t + u * from.width / to.width;\n            const sy = t + u * from.height / to.height;\n            return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\n        }\n    };\n}\n\nexport { flip };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n/**\n * Svelte store to hold an array of messages\n */\nexport const messageQueue = writable([]);\n/**\n * How long should each message be displayed in ms\n */\nconst messageTime = 4000;\n/**\n * Used to get a unique id for each message\n */\nlet idNumber = 0;\n/**\n * Simple class to hold a string and an ID used to display messages to the player.\n * This could be expanded to include icons, sound effects, css classes for animations etc.\n */\nexport class Message {\n    constructor(message) {\n        this.message = message;\n        this.id = idNumber++;\n    }\n}\n/**\n * Function to add a message to the message queue\n * @param message Message to be shown to the player\n */\nexport function sendMessage(message) {\n    // create a message object\n    const notification = new Message(message);\n    // add the message to the message queue\n    messageQueue.update(m => (m = [...m, notification]));\n    // create a timeout to automatically remove the message after messageTime elapsed\n    setTimeout(() => {\n        messageQueue.update(m => (m = m.filter(e => e.id != notification.id)));\n    }, messageTime);\n}\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script lang=\"ts\">\r\n  import { fly } from 'svelte/transition'\r\n  import { sineInOut } from 'svelte/easing'\r\n  import type { Message } from '@gamelogic/notifications'\r\n  export let message: Message\r\n</script>\r\n\r\n<!--\r\n  Template for a single notification message\r\n  transition:fly is used to animate the messages as they enter and exit the list\r\n-->\r\n<span transition:fly|local={{ x: 200, duration: 500, easing: sineInOut }}>{message.message}</span>\r\n\r\n<style>\r\n  span {\r\n    display: inline-block;\r\n    padding: 1rem 2rem;\r\n    border: 1px solid rgb(0, 0, 0);\r\n    margin-bottom: 1rem;\r\n    background-color: rgb(49, 49, 49);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { flip } from 'svelte/animate'\r\n  import { messageQueue } from '@gamelogic/notifications'\r\n  import Notification from './Notification.svelte'\r\n</script>\r\n\r\n<!-- \r\n  Layout for the list of notification messages\r\n  animate:flip will make the messages move smoothly up the list when one is removed\r\n-->\r\n<div>\r\n  {#each $messageQueue as message (message.id)}\r\n    <span animate:flip>\r\n      <Notification {message} />\r\n    </span>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  div {\r\n    position: fixed;\r\n    top: 3rem;\r\n    right: 1rem;\r\n    display: grid;\r\n    justify-items: end;\r\n  }\r\n\r\n  span {\r\n    display: inline-block;\r\n    width: fit-content;\r\n  }\r\n</style>\r\n","const suffixes = ['K', 'M', 'B', 'T', 'Qa', 'Qi', 'Sx', 'Sp', 'Oc', 'Dc'];\nconst suffixesB = ['K', 'M', 'G', 'T', 'P', 'E'];\nconst OOMs = [1e3, 1e6, 1e9, 1e12, 1e15, 1e18, 1e21, 1e24, 1e27, 1e30, 1e33];\n/**\n * Function to format a number for display on screen.\n * @param input Number to format\n * @param decimals How many decimals do you want\n */\nexport function formatNumber(input, decimals) {\n    if (typeof input !== 'number')\n        input = 0;\n    if (input < 0)\n        return '-' + formatNumber(-1 * input, decimals);\n    if (input >= OOMs[suffixes.length])\n        return input.toExponential(decimals).replace('+', '');\n    for (let i = suffixes.length - 1; i >= 0; i--) {\n        if (input >= OOMs[i])\n            return (input / OOMs[i]).toFixed(decimals) + suffixes[i];\n    }\n    return input.toFixed(decimals);\n}\nexport function formatNumber2(input, decimals) {\n    if (typeof input !== 'number')\n        input = 0;\n    if (input < 0)\n        return '-' + formatNumber(-1 * input, decimals);\n    if (input >= OOMs[suffixesB.length])\n        return input.toExponential(decimals).replace('+', '');\n    for (let i = suffixesB.length - 1; i >= 0; i--) {\n        if (input >= OOMs[i])\n            return (input / OOMs[i]).toFixed(decimals) + suffixesB[i];\n    }\n    return input.toFixed(decimals);\n}\n/**\n * Function to format a number for display on screen.\n * Will only show decimal places when the number is abbreviated.\n * @param input Number to format\n */\nexport function formatWhole(input) {\n    if (typeof input !== 'number')\n        input = 0;\n    if (input < 0)\n        return '-' + formatWhole(-1 * input);\n    if (input < 1e3)\n        return formatNumber(input, 0);\n    return formatNumber(input, 2);\n}\nexport function formatResourceName(name) {\n    if (name === 'moldyCheese')\n        return 'moldy cheese';\n    if (name === 'cheeseBrains')\n        return 'cheese brains';\n    return name;\n}\nexport function formatTime(sec, digits = 2) {\n    const hours = Math.floor(sec / 3600);\n    const minutes = Math.floor(sec / 60 - 60 * hours);\n    const seconds = Math.floor(sec % 60);\n    if (sec >= 3600)\n        return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    if (sec >= 60)\n        return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n    if (sec >= 1e-1)\n        return `${formatNumber(sec, digits)}s`;\n    if (sec >= 1e-4)\n        return `${formatNumber(sec * 1000, digits)}ms`;\n    return `${formatNumber(sec * 1000, digits)}µs`;\n}\n/**\n * Removes all references to an object or variable.\n * @param obj\n * @returns real copy of obj\n */\nexport function noRef(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nexport const baseLog = (base, x) => {\n    return Math.log(x) / Math.log(base);\n};\nexport function checkBoolForNum(bool, num, or = 1) {\n    return bool ? num : or;\n}\nexport function easeInQuad(x) {\n    if (x >= 1)\n        return 1;\n    return x * x;\n}\nexport function easeInOutQuad(x) {\n    if (x >= 1)\n        return 1;\n    return x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2;\n}\nexport function easeInOutSine(x) {\n    if (x >= 1)\n        return 1;\n    return -(Math.cos(Math.PI * x) - 1) / 2;\n}\n","import { writable } from 'svelte/store';\nimport { noRef } from '../gamelogic/utils';\nexport function makeStore(initialState) {\n    // important to wrap it in noRef() !!\n    const store = writable(noRef(initialState));\n    const refresh = () => {\n        store.update($store => $store);\n    };\n    const reset = () => {\n        store.set(noRef(initialState));\n    };\n    return Object.assign(Object.assign({}, store), { reset, refresh });\n}\n/* export function makeStore2(initialState: unknown) {\n  // important to wrap it in noRef() !!\n  const store = writable(noRef(initialState))\n  const reset = (): void => {\n    store.set(noRef(initialState))\n  }\n  const add = (resource: string, n: number): void => {\n    store.update($store => {\n      if (typeof $store[resource] === 'number') ($store[resource] as number) += n\n    })\n    return store\n  }\n  return { ...store, reset, add }\n} */\n","import { makeStore } from '../customStore';\nexport const resource = makeStore({\n    thoughts: 0,\n    cheese: 0,\n    moldyCheese: 0,\n    cheeseMonster: 0,\n    cheeseBrains: 0,\n    milk: 0,\n    milkPower: 0,\n    milkPoints: 0,\n});\n","var _a, _Upgrade_id;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport { makeStore } from '../customStore';\nimport { resource } from './resources';\nimport { get } from 'svelte/store';\nclass Upgrade {\n    constructor(resource, cost, costMultiplier, maxBuy = null, bought = 0) {\n        var _b, _c, _d;\n        this.resource = resource;\n        this.cost = cost;\n        this.costMultiplier = costMultiplier;\n        this.maxBuy = maxBuy;\n        this.bought = bought;\n        this.id = (__classPrivateFieldSet(_b = Upgrade, _a, (_d = __classPrivateFieldGet(_b, _a, \"f\", _Upgrade_id), _c = _d++, _d), \"f\", _Upgrade_id), _c);\n    }\n}\n_a = Upgrade;\n_Upgrade_id = { value: 0 };\nexport const upgradesInitial = {\n    // Cogito Ergo Sum\n    thoughtAcceleration: new Upgrade('thoughts', 10, 1.15),\n    thoughtJerk: new Upgrade('thoughts', 1e8, 1.3),\n    thoughtBoostStrength: new Upgrade('thoughts', 100, 2),\n    thoughtBoostDuration: new Upgrade('thoughts', 150, 4, 11),\n    thoughtBoostStack: new Upgrade('thoughts', 1e7, 5, 9),\n    // Switzerland Simulator\n    cheeseQueueLength: new Upgrade('cheese', 5, 2),\n    cheeseYield: new Upgrade('cheese', 15, 1.3),\n    cheeseThoughtMult: new Upgrade('cheese', 300, 2),\n    cheeseQueueOverclockingCost: new Upgrade('cheese', 5e3, 1.5),\n    // Moldy Cheese\n    moldyCheeseConversionExponent: new Upgrade('moldyCheese', 5, 1.5),\n    moldyCheeseHalfLife: new Upgrade('moldyCheese', 20, 1.3),\n    moldyCheeseChance: new Upgrade('moldyCheese', 200, 2.5, 9),\n    cheeseMonsterSpawnrate: new Upgrade('moldyCheese', 250, 2.0),\n    cheeseMonsterCapacity: new Upgrade('moldyCheese', 500, 1.3),\n    // Loot\n    cheeseMonsterDropRate: new Upgrade('cheeseBrains', 5, 2, 18),\n    cheeseMonsterLoot: new Upgrade('cheeseBrains', 10, 1.15),\n    cheeseMonsterSentience: new Upgrade('cheeseBrains', 20, 1.2),\n    cheeseMonsterMoldiness: new Upgrade('cheeseBrains', 100, 1.25),\n    // Milk Power\n    milkPowerGain: new Upgrade('milkPower', 100, 2),\n    cheeseMonsterCapacityPerUpgrade: new Upgrade('milkPower', 1000, 1.5),\n    // Milk\n    milkThoughtsGain: new Upgrade('milk', 10, 1.5),\n    milkCheeseGain: new Upgrade('milk', 10, 1.5),\n    milkMoldyCheeseGain: new Upgrade('milk', 10, 1.5),\n    milkMonsterGain: new Upgrade('milk', 10, 1.5),\n};\nexport const upgrades = makeStore(upgradesInitial);\nfunction makeUpgradesStore(initialState) {\n    const store = makeStore(initialState);\n    const buy = (name, buyMaxUpgrades = false) => {\n        store.update($store => {\n            const upgrade = $store[name];\n            let checkoutCost = 0;\n            const res = get(resource)[upgrade.resource];\n            if (res < upgrade.cost)\n                return $store;\n            if (!buyMaxUpgrades) {\n                // PURCHASE SINGLE:\n                checkoutCost = upgrade.cost;\n                upgrade.cost *= upgrade.costMultiplier;\n                upgrade.bought++;\n            }\n            else {\n                // PURCHASE MAX:\n                const cost = upgrade.cost;\n                const costMult = upgrade.costMultiplier;\n                // used formulas for geometric series (because of the exponential cost curve of the upgrades)\n                const numUpgradesAffordable = Math.floor(Math.log((res / cost) * (costMult - 1) + 1) / Math.log(costMult));\n                const totalPrice = (cost * (Math.pow(costMult, numUpgradesAffordable) - 1)) / (costMult - 1);\n                checkoutCost = totalPrice;\n                upgrade.cost *= Math.pow(costMult, numUpgradesAffordable);\n                upgrade.bought += numUpgradesAffordable;\n                // alert(\"Upgrades affordable: \" + numUpgradesAffordable + \", Total Prize: \" + totalPrice)\n            }\n            resource.update($resource => {\n                $resource[upgrade.resource] -= checkoutCost;\n                return $resource;\n            });\n            return $store;\n        });\n    };\n    return Object.assign(Object.assign({}, store), { buy });\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { makeStore } from '../customStore';\nexport var UnlockName;\n(function (UnlockName) {\n    // Thoughts\n    UnlockName[\"START\"] = \"start\";\n    UnlockName[\"THINK_PASSIVELY\"] = \"thinkPassively\";\n    UnlockName[\"THINK_FASTER\"] = \"thinkFaster\";\n    UnlockName[\"THOUGHT_BOOST\"] = \"thoughtBoost\";\n    UnlockName[\"THOUGHTS_50_PERCENT\"] = \"thoughts50Percent\";\n    UnlockName[\"SWITZERLAND\"] = \"switzerland\";\n    UnlockName[\"THOUGHT_BOOST_STACK\"] = \"thoughtBoostStack\";\n    UnlockName[\"MOLDY_CHEESE\"] = \"moldyCheese\";\n    UnlockName[\"MILK\"] = \"milk\";\n    // Cheese\n    UnlockName[\"CHEESE_QUEUE\"] = \"cheeseQueue\";\n    UnlockName[\"CHEESE_QUEUE_OVERCLOCKING\"] = \"cheeseQueueOverclocking\";\n    UnlockName[\"CHEESE_QUEUE_LENGTH_BOOST\"] = \"cheeseQueueLengthBoost\";\n    UnlockName[\"CHEESE_BOOST\"] = \"cheeseBoost\";\n    UnlockName[\"CHEESE_QUEUE_COST_DIVIDE\"] = \"cheeseQueueCostDivide\";\n    UnlockName[\"CHEESE_CYCLE_ACCELERATOR\"] = \"cheeseCycleAccelerator\";\n    UnlockName[\"THOUGHT_JERK\"] = \"thoughtJerk\";\n    UnlockName[\"CHEESE_MODES\"] = \"cheeseModes\";\n    UnlockName[\"CHEESE_CYCLES_BOOST_THOUGHTS\"] = \"cheeseCyclesBoostThoughts\";\n    // Moldy Cheese\n    UnlockName[\"MOLDY_CHEESE_BYPRODUCT\"] = \"moldyCheeseByproduct\";\n    UnlockName[\"CHEESEYARD\"] = \"cheeseyard\";\n    UnlockName[\"MANUAL_MOLDY_CHEESE_CONVERSION_BOOST\"] = \"manualMoldyCheeseConversionBoost\";\n    UnlockName[\"CHEESEYARD_MOLD_UPGRADE\"] = \"cheeseyardMoldUpgrade\";\n    UnlockName[\"MOLDY_CHEESE_CYCLE_DURATION_BOOST\"] = \"moldyCheeseCycleDurationBoost\";\n    UnlockName[\"MOLDY_CHEESE_HALFLIFE_BOOST\"] = \"moldyCheeseHalflifeBoost\";\n    // Cheeseyard\n    UnlockName[\"MONSTER_BRAIN_WAVE_CONTROLLER\"] = \"monsterBrainWaveController\";\n    UnlockName[\"CHEESE_MONSTER_MASSACRE\"] = \"cheeseMonsterMassacre\";\n    UnlockName[\"CHEESE_MONSTER_COLLECTIVE_SENTIENCE\"] = \"cheeseMonsterCollectiveSentience\";\n    UnlockName[\"CHEESE_MONSTER_TOTAL_DEATHS_BOOST\"] = \"cheeseMonsterTotalDeathsBoost\";\n})(UnlockName || (UnlockName = {}));\nexport const unlocks = {\n    // Cogito Ergo Sum\n    thoughts: [\n        {\n            name: UnlockName.THINK_PASSIVELY,\n            type: 'Boost',\n            resource: 'thoughts',\n            cost: 10,\n            title: 'Learn to think',\n            description: 'You think <strong>once</strong> per second.',\n            tooltipText: '\"I think, therefore I am.\"',\n        },\n        {\n            name: UnlockName.THINK_FASTER,\n            type: 'Unlock',\n            resource: 'thoughts',\n            cost: 30,\n            title: 'Accelerate your thinking',\n            description: 'Unlock the upgrade <strong>Thought Acceleration</strong>',\n            tooltipText: 'Really makes you think...',\n            availableAt: UnlockName.THINK_PASSIVELY,\n        },\n        {\n            name: UnlockName.THOUGHT_BOOST,\n            type: 'Mechanic',\n            resource: 'thoughts',\n            cost: 50,\n            title: 'Boost your thinking',\n            description: 'Instead of thinking once when you click, you gain a production multiplier temporarily.',\n            tooltipText: '\"I dont want to spam click a gazillion times to play ur game\"',\n            availableAt: UnlockName.THINK_PASSIVELY,\n        },\n        {\n            name: UnlockName.THOUGHTS_50_PERCENT,\n            type: 'Boost',\n            resource: 'thoughts',\n            cost: 500,\n            title: 'Simple Maths',\n            description: 'Your thinking is boosted by 50%.',\n            tooltipText: '\"If you no longer go for a production multiplier that exists, you\\'re no longer an incrementalist.\"',\n            availableAt: UnlockName.THINK_PASSIVELY,\n        },\n        {\n            name: UnlockName.SWITZERLAND,\n            type: 'Unlock',\n            resource: 'thoughts',\n            cost: 3000,\n            title: 'Travel to Switzerland',\n            description: 'You can start producing <strong style=\"color:yellow\">Cheese</strong>.',\n            tooltipText: 'The land of cheese',\n            availableAt: UnlockName.THINK_PASSIVELY,\n        },\n        {\n            name: UnlockName.THOUGHT_BOOST_STACK,\n            type: 'Unlock',\n            resource: 'thoughts',\n            cost: 1e6,\n            title: 'Extended Focus',\n            description: 'Gain the ability to stack Thought Boosts.',\n            tooltipText: 'Viagra for the brain',\n            availableAt: UnlockName.CHEESE_QUEUE,\n        },\n        {\n            name: UnlockName.MOLDY_CHEESE,\n            type: 'Unlock',\n            resource: 'thoughts',\n            cost: 100e9,\n            title: 'Derivative Cheese',\n            description: 'You can convert <strong style=\"color:yellow\">Cheese</strong> into <strong style=\"color:rgb(60, 255, 0)\">Moldy Cheese</strong>, if you think it tastes better.',\n            tooltipText: 'Is it okay to eat?',\n            availableAt: UnlockName.CHEESE_QUEUE,\n        },\n        {\n            name: UnlockName.MILK,\n            type: 'Unlock',\n            resource: 'thoughts',\n            cost: 1e22,\n            title: 'Prestige?',\n            description: '<span>You can reset your progress for a glass of calcium-rich <strong>Milk</strong></span>.',\n            tooltipText: 'From cheese you get milk...I think.',\n            availableAt: UnlockName.THOUGHT_JERK,\n        },\n    ],\n    // Switzerland Simulator\n    cheese: [\n        {\n            name: UnlockName.CHEESE_QUEUE,\n            type: 'Mechanic',\n            resource: 'cheese',\n            cost: 8,\n            title: 'Cheese Queue',\n            description: 'You can queue up the production of <strong style=\"color:yellow\">Cheese</strong>.',\n            tooltipText: 'Cheese-o-mation lets you cheese clicking a button.',\n        },\n        {\n            name: UnlockName.CHEESE_QUEUE_OVERCLOCKING,\n            type: 'Mechanic',\n            resource: 'cheese',\n            cost: 50,\n            title: 'Cheese Overclocking',\n            description: 'You can increase the speed of your workers producing cheese by forcing them to think faster.',\n            tooltipText: 'Thinking about how to cheese faster...',\n        },\n        {\n            name: UnlockName.CHEESE_QUEUE_LENGTH_BOOST,\n            type: 'Effect',\n            resource: 'cheese',\n            cost: 500,\n            title: 'Length Boost',\n            description: 'The capacity of the Cheese Queue boosts cheese production.',\n            tooltipText: 'Give your employees more work like a good boss.',\n            availableAt: UnlockName.CHEESE_QUEUE,\n        },\n        {\n            name: UnlockName.CHEESE_BOOST,\n            type: 'Effect',\n            resource: 'cheese',\n            cost: 50000,\n            title: 'Cheese Boost',\n            description: 'Thought Boost also affects cheese production.',\n            tooltipText: 'If you think hard enough, you can create cheese out of nothing.',\n            availableAt: UnlockName.CHEESE_QUEUE,\n        },\n        {\n            name: UnlockName.CHEESE_QUEUE_COST_DIVIDE,\n            type: 'Unlock',\n            resource: 'cheese',\n            cost: 1e6,\n            title: 'Cheepse',\n            description: 'Unlock an additional upgrade to make cheese production more cost-efficient.',\n            tooltipText: 'How much does a thought weigh?',\n            availableAt: UnlockName.CHEESE_QUEUE,\n        },\n        {\n            name: UnlockName.CHEESE_CYCLE_ACCELERATOR,\n            type: 'Effect',\n            resource: 'cheese',\n            cost: 5e6,\n            title: 'Experience is key',\n            description: 'Cheese production speeds up based on the amount of cheese cycles completed.',\n            tooltipText: 'The mastery of cheese, a very important life skill to have.',\n            availableAt: UnlockName.CHEESE_QUEUE_LENGTH_BOOST,\n        },\n        {\n            name: UnlockName.THOUGHT_JERK,\n            type: 'Unlock',\n            resource: 'cheese',\n            cost: 3e7,\n            title: 'More to think about',\n            description: 'Jerk(?) your thinking.',\n            tooltipText: 'something something per second cubed',\n            availableAt: UnlockName.CHEESE_QUEUE_LENGTH_BOOST,\n        },\n        {\n            name: UnlockName.CHEESE_MODES,\n            type: 'Mechanic',\n            resource: 'cheese',\n            cost: 5e7,\n            title: 'Cheese Factory Protocol',\n            description: 'Gain access to 3 modes to help manage your cheese production',\n            tooltipText: 'Micromanaging your employees will lead to universal happiness.',\n            availableAt: UnlockName.CHEESE_QUEUE_LENGTH_BOOST,\n        },\n        {\n            name: UnlockName.CHEESE_CYCLES_BOOST_THOUGHTS,\n            type: 'Effect',\n            resource: 'cheese',\n            cost: 1e8,\n            title: 'Return on Investment',\n            description: 'Total cheese cycles give a boost (multiplier) to your thinking.',\n            tooltipText: 'I like cycling. My favorite is cheese.',\n            availableAt: UnlockName.CHEESE_CYCLE_ACCELERATOR,\n        },\n    ],\n    // Moldy Cheese\n    moldyCheese: [\n        {\n            name: UnlockName.MOLDY_CHEESE_BYPRODUCT,\n            type: 'Mechanic',\n            resource: 'moldyCheese',\n            cost: 100,\n            title: 'Moldomation',\n            description: 'Sometimes the cheese factory will produce moldy cheese as a byproduct.',\n            tooltipText: 'Is this good... or bad?',\n        },\n        {\n            name: UnlockName.CHEESEYARD,\n            type: 'Unlock',\n            resource: 'moldyCheese',\n            cost: 2000,\n            title: 'End Times',\n            description: 'Construct the <strong style=\"color:crimson\">Cheeseyard</strong>, a place where abominations made of cheese reside.',\n            tooltipText: 'What happens after cheese dies?',\n        },\n        {\n            name: UnlockName.MANUAL_MOLDY_CHEESE_CONVERSION_BOOST,\n            type: 'Boost',\n            resource: 'moldyCheese',\n            cost: 4000,\n            title: 'Passiveness',\n            description: 'Cheese sacrifice produces 10x more moldy cheese, but its cooldown is also increased by 10x.',\n            tooltipText: 'Some scientists are still unsure whether this will increase your effective gain.',\n        },\n        {\n            name: UnlockName.CHEESEYARD_MOLD_UPGRADE,\n            type: 'Unlock',\n            resource: 'moldyCheese',\n            cost: 8000,\n            title: 'Em(b)olden',\n            description: 'Your cheese monsters can get moldy. <br> Unlock an additional upgrade in the Cheeseyard.',\n            tooltipText: 'This smells...',\n            availableAt: UnlockName.MONSTER_BRAIN_WAVE_CONTROLLER,\n        },\n        {\n            name: UnlockName.MOLDY_CHEESE_CYCLE_DURATION_BOOST,\n            type: 'Effect',\n            resource: 'moldyCheese',\n            cost: 16000,\n            title: 'Slow and Steady',\n            description: 'Moldy cheese byproduct gain is boosted by the relative duration of the cheese cycle (which depends on the cheese factory protocol).',\n            tooltipText: 'The most meticulously crafted cheese is the moldiest.',\n            availableAt: UnlockName.MONSTER_BRAIN_WAVE_CONTROLLER,\n        },\n        {\n            name: UnlockName.MOLDY_CHEESE_HALFLIFE_BOOST,\n            type: 'Effect',\n            resource: 'moldyCheese',\n            cost: 1e6,\n            title: 'Half-important Upgrade',\n            description: 'Cheese gain is additionally boosted by MC half-life.',\n            tooltipText: 'How much are 2 half-lives? They drop your braincells by 75%.',\n            availableAt: UnlockName.CHEESEYARD_MOLD_UPGRADE,\n        },\n    ],\n    // The Cheeseyard\n    cheeseBrains: [\n        {\n            name: UnlockName.CHEESE_MONSTER_MASSACRE,\n            type: 'Mechanic',\n            resource: 'cheeseBrains',\n            cost: 200,\n            title: 'No Morals',\n            description: 'When killing many cheese monsters at once, the loot is massively boosted.',\n            tooltipText: 'Rewarding genocide! <br /> (only applies in this game and NOT in real life)',\n        },\n        {\n            name: UnlockName.CHEESE_MONSTER_COLLECTIVE_SENTIENCE,\n            type: 'Mechanic',\n            resource: 'cheeseBrains',\n            cost: 1e5,\n            title: 'Collective Sentience',\n            description: 'Bigger populations give a (much) bigger global boost to thinking due to emergence.',\n            tooltipText: 'Completely harmless.',\n        },\n        {\n            name: UnlockName.CHEESE_MONSTER_TOTAL_DEATHS_BOOST,\n            type: 'Effect',\n            resource: 'cheeseBrains',\n            cost: 1e6,\n            title: 'Mass Murder',\n            description: 'Total cheese monster deaths boost dropped monster loot.',\n            tooltipText: 'You have to perfect to art of killing to extract the most out of corpses.',\n        },\n    ],\n};\nexport const unlocked = makeStore(convertEnumToFlagObject(UnlockName));\n/* export const unlocked = makeStore<Record<UnlockName, boolean>>({\n  start: true,\n\n  // Cogito Ergo Sum\n  thinkPassively: false,\n  thinkFaster: false,\n  thoughtBoost: false,\n  thoughts50Percent: false,\n  switzerland: false,\n  thoughtBoostStack: false,\n  moldyCheese: false,\n  milk: false,\n\n  // Switzerland Simulator\n  cheeseQueue: false,\n  cheeseQueueLengthBoost: false,\n  cheeseBoost: false,\n  cheeseCycleAccelerator: false,\n  thoughtJerk: false,\n  cheeseModes: false,\n  cheeseCyclesBoostThoughts: false,\n\n  // Moldy Cheese\n  moldyCheeseByproduct: false,\n  manualMoldyCheeseConversionBoost: false,\n  cheeseyard: false,\n  moldyCheeseCycleDurationBoost: false,\n\n  // The Cheeseyard\n  monsterBrainWaveController: false,\n  cheeseMonsterMassacre: false,\n  cheeseMonsterCollectiveSentience: false,\n  cheeseMonsterTotalDeathsBoost: false,\n\n  // Milk\n}) */\nfunction convertEnumToFlagObject(enumme) {\n    const obj = Object.values(enumme);\n    const result = {};\n    obj.forEach(value => {\n        if (value === enumme.START)\n            result[value] = true;\n        else\n            result[value] = false;\n    });\n    return result;\n}\n// console.log('ENUM ', Object.values(UnlockName), convertEnumToUnlockedObject(UnlockName))\n","import { makeStore } from '../customStore';\nexport var MilkBoost;\n(function (MilkBoost) {\n    MilkBoost[\"ThoughtAccelBoostsItself\"] = \"thoughtAccelBoostsItself\";\n    MilkBoost[\"ImproveFormulaCheeseBoostsThoughts\"] = \"improveFormulaCheeseBoostsThoughts\";\n    MilkBoost[\"ImproveFormulaCheeseQueueLengthBoostsCheese\"] = \"improveFormulaCheeseQueueLengthBoostsCheese\";\n    MilkBoost[\"ImproveFormulaTotalCheeseCyclesBoostsThoughts\"] = \"improveFormulaTotalCheeseCyclesBoostsThoughts\";\n    MilkBoost[\"UnlockAdditionalUpgradesCheeseProductionTime\"] = \"unlockAdditionalUpgradesCheeseProductionTime\";\n    MilkBoost[\"MCByproductBoostedByMCHalflife\"] = \"mCByproductBoostedByMCHalflife\";\n    MilkBoost[\"CheeseCyclesPerCheeseModeBoostCheese\"] = \"cheeseCyclesPerCheeseModeBoostCheese\";\n    MilkBoost[\"CheeseUpgradeProductionTimeGivesFreeCheeseUpgradeYield\"] = \"cheeseUpgradeProductionTimeGivesFreeCheeseUpgradeYield\";\n    MilkBoost[\"ThoughtGainBoostedByThoughts\"] = \"thoughtGainBoostedByThoughts\";\n    MilkBoost[\"MilkGainMultiplied\"] = \"milkGainMultiplied\";\n    MilkBoost[\"UnspentMilkBoostsCheese\"] = \"unspentMilkBoostsCheese\";\n    MilkBoost[\"GainPercentageOfPotentialMilk\"] = \"gainPercentageOfPotentialMilk\";\n    MilkBoost[\"MassacreEffectBoosted\"] = \"massacreEffectBoosted\";\n    MilkBoost[\"CollectiveSentienceBoosted\"] = \"collectiveSentienceBoosted\";\n    MilkBoost[\"BetterScalingTotalCheeseMonsterDeathsLootBoost\"] = \"betterScalingTotalCheeseMonsterDeathsLootBoost\";\n    MilkBoost[\"UnspentCheeseBrainsBoostMonsterResourceGeneration\"] = \"unspentCheeseBrainsBoostMonsterResourceGeneration\";\n})(MilkBoost || (MilkBoost = {}));\nexport const milkBoostActive = makeStore({\n    thoughtAccelBoostsItself: false,\n    improveFormulaCheeseBoostsThoughts: false,\n    improveFormulaCheeseQueueLengthBoostsCheese: false,\n    improveFormulaTotalCheeseCyclesBoostsThoughts: false,\n    unlockAdditionalUpgradesCheeseProductionTime: false,\n    mCByproductBoostedByMCHalflife: false,\n    cheeseCyclesPerCheeseModeBoostCheese: false,\n    cheeseUpgradeProductionTimeGivesFreeCheeseUpgradeYield: false,\n    thoughtGainBoostedByThoughts: false,\n    milkGainMultiplied: false,\n    unspentMilkBoostsCheese: false,\n    gainPercentageOfPotentialMilk: false,\n    massacreEffectBoosted: false,\n    collectiveSentienceBoosted: false,\n    betterScalingTotalCheeseMonsterDeathsLootBoost: false,\n    unspentCheeseBrainsBoostMonsterResourceGeneration: false,\n});\nconst loremIpsum = 'Lorem Ipsum';\nconst mockSkill = {\n    label: loremIpsum,\n    description: 'No Desc',\n    cost: 100,\n    activated: false,\n    available: false,\n};\nconst milkBoosts = {\n    [MilkBoost.ThoughtAccelBoostsItself]: {\n        label: 'Reacceleration',\n        description: 'The effect of Thought Acceleration is multiplied by a factor proportional to the ' +\n            'amount of Thought Acceleration upgrades you own.',\n        cost: 5,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.ImproveFormulaCheeseBoostsThoughts]: {\n        label: 'Cheesy Thoughts',\n        description: 'Improve the formula for cheese increasing thoughts/s <br> Current Formula: log(cheese + 1) <br>' +\n            'Improved Formula: sqrt(cheese)',\n        cost: 10,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.ImproveFormulaCheeseQueueLengthBoostsCheese]: {\n        label: 'Polynomial Queue',\n        description: 'Improves the formula for Cheese Queue Length affecting cheese production. <br>' +\n            'Current Formula: MaxLength / 10 <br> Improved Formula: MaxLength^3 / 100',\n        cost: 5,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.ImproveFormulaTotalCheeseCyclesBoostsThoughts]: {\n        label: 'Braincycles',\n        description: 'Improves the Formula for Total Cheese Cycles boosting your thinking <br>' +\n            'Current Formula: sqrt(cycles / 10) <br> Improved Formula: cycles^2 / 1000 ',\n        cost: 15,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.UnlockAdditionalUpgradesCheeseProductionTime]: {\n        label: 'Crunch Time',\n        description: 'Unlock 50 additional upgrades for “cheese production 5% takes less time...”',\n        cost: 15,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.MCByproductBoostedByMCHalflife]: {\n        label: 'Moldy Time',\n        description: 'The relative duration of the meticulous cheese factory protocol is multiplied by 100. <br>' +\n            'MC byproduct yield is additionally boosted by MC half-life (in seconds). <br> Factor: (half-life / 100)^3',\n        cost: 25,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.CheeseCyclesPerCheeseModeBoostCheese]: {\n        label: 'Diverse Factory',\n        description: 'Cheese Cycles completed for each cheese factory protocol give a boost to cheese production. ' +\n            'Each mode contributes to a separate factor, and cheese gain is multiplied by all 3 factors. <br>' +\n            '(If this boost is deactivated, these factors are saved at their current values.)',\n        cost: 20,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.CheeseUpgradeProductionTimeGivesFreeCheeseUpgradeYield]: {\n        label: 'Overproduction',\n        description: 'When increasing the workload of your cheese factory workers, they complete their work in the same amount of time. <br>' +\n            '(Their families are being threatened, they know what happens if they dont comply.)',\n        cost: 10,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.ThoughtGainBoostedByThoughts]: {\n        label: 'Thoughtback Loop',\n        description: 'Thoughts/s are boosted by total thoughts. <br> Relationship: thoughts/s *= sqrt(thoughts)',\n        cost: 20,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.MilkGainMultiplied]: {\n        label: 'Milkiplied',\n        description: 'Milk gain is tripled.',\n        cost: 5,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.UnspentMilkBoostsCheese]: {\n        label: 'Milky Cheese',\n        description: 'Your unspent milk increases cheese gain proportionally. <br> (cheeseGain *= milk / 10)',\n        cost: 15,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.MassacreEffectBoosted]: {\n        label: 'Genocidal Tendencies',\n        description: 'The Massacre effect for cheese monsters is more potent. <br> Exponent: 1.3 -> 2.0',\n        cost: 15,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.CollectiveSentienceBoosted]: {\n        label: 'Der Schwarm',\n        description: 'The collective sentience of cheese monsters is boosted. (use at your own risk) <br> ' + 'Exponent: 3.0 -> 5.0',\n        cost: 20,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.BetterScalingTotalCheeseMonsterDeathsLootBoost]: {\n        label: 'Death Scaling',\n        description: 'Better scaling for Upgrade “Total cheese monster deaths boost loot gain” <br>' +\n            'Scaling: quadratic -> cubic(?)',\n        cost: 25,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.UnspentCheeseBrainsBoostMonsterResourceGeneration]: {\n        label: 'Brain Scaling',\n        description: 'The cheese monster resource generation is boosted based on unspent cheese brains <br>' +\n            'Factor: cheeseBrains^1.5',\n        cost: 25,\n        activated: false,\n        available: false,\n    },\n    [MilkBoost.GainPercentageOfPotentialMilk]: {\n        label: '',\n        description: '',\n        cost: 0,\n        activated: false,\n        available: false,\n    },\n};\nexport const skillTree = [\n    [\n        milkBoosts.thoughtAccelBoostsItself,\n        milkBoosts.improveFormulaCheeseQueueLengthBoostsCheese,\n        milkBoosts.milkGainMultiplied,\n    ],\n    [milkBoosts.improveFormulaCheeseBoostsThoughts, milkBoosts.cheeseUpgradeProductionTimeGivesFreeCheeseUpgradeYield],\n    [\n        milkBoosts.improveFormulaTotalCheeseCyclesBoostsThoughts,\n        milkBoosts.massacreEffectBoosted,\n        milkBoosts.unspentMilkBoostsCheese,\n        milkBoosts.unlockAdditionalUpgradesCheeseProductionTime,\n    ],\n    [\n        milkBoosts.cheeseCyclesPerCheeseModeBoostCheese,\n        milkBoosts.thoughtGainBoostedByThoughts,\n        milkBoosts.collectiveSentienceBoosted,\n    ],\n    [\n        milkBoosts.mCByproductBoostedByMCHalflife,\n        milkBoosts.betterScalingTotalCheeseMonsterDeathsLootBoost,\n        milkBoosts.unspentCheeseBrainsBoostMonsterResourceGeneration,\n    ],\n];\nexport const allowedSkillTreeConnections = [\n    '000',\n    '010',\n    '011',\n    '021',\n    '100',\n    '101',\n    '112',\n    '113',\n    '210',\n    '211',\n    '221',\n    '222',\n    '300',\n    '311',\n    '322',\n];\n","import { makeStore } from '../customStore';\nexport const ADMIN_MODE = makeStore(false);\nexport const LORCA_OVERRIDE = makeStore(false);\nexport const devToolsEnabled = makeStore(false);\nexport const lastSaved = makeStore(Date.now());\nexport const totalTimePlayed = makeStore(0);\nexport const currentThoughtBoost = makeStore(1);\nexport const currentThoughtBoostTime = makeStore(0);\nexport const currentCheeseQueue = makeStore(0);\nexport const cheeseQueueActive = makeStore(false);\nexport const cheeseQueueOverclockLvl = makeStore(0);\nexport const cheeseQueueTotalCycles = makeStore(0);\nexport const cheeseFactoryMode = makeStore('nominal');\nexport const totalCheeseMonsterDeaths = makeStore(0);\nexport const brainMode = makeStore('peaceful');\nexport const highestMilk = makeStore(0);\n","var _a, _UpgradeTiered_id;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport { makeStore } from '../customStore';\nimport { resource } from './resources';\nimport { get } from 'svelte/store';\nclass UpgradeTiered {\n    constructor(resource, cost, costMultiplier, effectMultiplierInTier, upgradesToNextTier, totalEffectMultiplier = 1, tierUpMultipler = 5, tier = 1, maxTier = 5, bought = 0) {\n        var _b, _c, _d;\n        this.resource = resource;\n        this.cost = cost;\n        this.costMultiplier = costMultiplier;\n        this.effectMultiplierInTier = effectMultiplierInTier;\n        this.upgradesToNextTier = upgradesToNextTier;\n        this.totalEffectMultiplier = totalEffectMultiplier;\n        this.tierUpMultipler = tierUpMultipler;\n        this.tier = tier;\n        this.maxTier = maxTier;\n        this.bought = bought;\n        this.id = (__classPrivateFieldSet(_b = UpgradeTiered, _a, (_d = __classPrivateFieldGet(_b, _a, \"f\", _UpgradeTiered_id), _c = _d++, _d), \"f\", _UpgradeTiered_id), _c);\n    }\n}\n_a = UpgradeTiered;\n_UpgradeTiered_id = { value: 0 };\nexport const upgradesTieredInitial = {};\nexport const upgradesTiered = makeUpgradesStore(upgradesTieredInitial);\nfunction makeUpgradesStore(initialState) {\n    const store = makeStore(initialState);\n    const buy = (name) => {\n        store.update($store => {\n            const upgrade = $store[name];\n            let checkoutCost = 0;\n            const res = get(resource)[upgrade.resource];\n            if (res < upgrade.cost)\n                return $store;\n            checkoutCost = upgrade.cost;\n            upgrade.cost *= upgrade.costMultiplier;\n            upgrade.bought++;\n            upgrade.totalEffectMultiplier *= upgrade.effectMultiplierInTier[upgrade.tier - 1];\n            const toNextTier = upgrade.upgradesToNextTier[upgrade.tier - 1];\n            if (toNextTier !== undefined && upgrade.bought >= toNextTier) {\n                upgrade.tier++;\n                upgrade.bought = 0;\n                // divide thru costMultiplier so it cancels out\n                upgrade.cost *= upgrade.tierUpMultipler / upgrade.costMultiplier;\n                upgrade.totalEffectMultiplier *= 10;\n            }\n            resource.update($resource => {\n                $resource[upgrade.resource] -= checkoutCost;\n                return $resource;\n            });\n            return $store;\n        });\n    };\n    return Object.assign(Object.assign({}, store), { buy });\n}\n","import { derived } from 'svelte/store';\nimport { unlocked, upgrades, resource, cheeseQueueTotalCycles, cheeseFactoryMode, cheeseQueueOverclockLvl, currentThoughtBoost, brainMode, totalCheeseMonsterDeaths, } from '../primitive';\nimport { checkBoolForNum } from '@gamelogic/utils';\nexport const thoughtBoostMax = derived(upgrades, $upgrades => 1.5 + 0.2 * Math.pow($upgrades.thoughtBoostStrength.bought, 1.5));\nexport const thoughtBoostDuration = derived(upgrades, $upgrades => 5000 + 5000 * $upgrades.thoughtBoostDuration.bought);\nexport const thoughtBoostMaxStacks = derived(upgrades, $upgrades => 1 + $upgrades.thoughtBoostStack.bought);\nexport const thoughtsPerSecBase = derived([unlocked, upgrades], ([$unlocked, $upgrades]) => {\n    const fromBasicUpgrades = $upgrades.thoughtAcceleration.bought * (1 * $upgrades.thoughtJerk.bought + 1);\n    return +$unlocked.thinkPassively + fromBasicUpgrades;\n});\nexport const thoughtMultFromUnlocks = derived(unlocked, $unlocked => checkBoolForNum($unlocked.thoughts50Percent, 1.5));\nexport const cheeseThoughtMult = derived([resource, upgrades], ([$resource, $upgrades]) => 1 + Math.log($resource.cheese + 1) * $upgrades.cheeseThoughtMult.bought * $upgrades.cheeseThoughtMult.bought);\nexport const maxCheeseQueue = derived(upgrades, $upgrades => 5 + 5 * $upgrades.cheeseQueueLength.bought);\nexport const cheeseCyclesThoughtMult = derived([unlocked, cheeseQueueTotalCycles], ([$unlocked, $cheeseQueueTotalCycles]) => checkBoolForNum($unlocked.cheeseCyclesBoostThoughts, 1 + 0.001 * Math.pow($cheeseQueueTotalCycles, 1.5)));\nexport const cheeseSpeedFactor = { duration: 0.95, cost: 1.4 };\nexport const cheeseYieldDeltaDuration = 500; // ms\nexport const cheeseModeStats = {\n    meticulous: { yield: 1, duration: 10, cost: 1 },\n    nominal: { yield: 1, duration: 1, cost: 1 },\n    warpSpeed: { yield: 1 / 100, duration: 1 / 10, cost: 1 / 10 },\n};\nexport const cheeseModeFactor = derived(cheeseFactoryMode, $cheeseFactoryMode => cheeseModeStats[$cheeseFactoryMode]);\nexport const cheeseQueueCostDivideBy = derived(upgrades, $upgrades => $upgrades.cheeseQueueOverclockingCost.bought > 0\n    ? 1 + 0.25 * ($upgrades.cheeseQueueOverclockingCost.bought + 1) * ($upgrades.cheeseQueueOverclockingCost.bought + 1)\n    : 1);\nexport const cheeseQueueOverclockSpeedMult = derived(cheeseQueueOverclockLvl, $cheeseQueueOverclockLvl => Math.pow(1.05, $cheeseQueueOverclockLvl));\nexport const cheeseQueueOverclockCostMult = derived(cheeseQueueOverclockLvl, $cheeseQueueOverclockLvl => 1 * Math.pow(2, $cheeseQueueOverclockLvl));\nexport const cheeseCycleAcceleratorFactor = derived([unlocked, cheeseQueueTotalCycles], ([$unlocked, $cheeseQueueTotalCycles]) => checkBoolForNum($unlocked.cheeseCycleAccelerator, 1 + Math.log($cheeseQueueTotalCycles / 100 + 1)));\nexport const cheeseBoostFactorYield = derived([unlocked, currentThoughtBoost], ([$unlocked, $currentThoughtBoost]) => checkBoolForNum($unlocked.cheeseBoost, $currentThoughtBoost));\n// MOLDY STUFF\nconst mcHalfLifeStartingValue = 10;\nexport const mcHalfLifeSeconds = derived(upgrades, $upgrades => mcHalfLifeStartingValue + 10 * $upgrades.moldyCheeseHalfLife.bought);\nexport const moldyCheeseChance = derived(upgrades, $upgrades => 0.1 + 0.1 * $upgrades.moldyCheeseChance.bought);\nexport const mcConversionCooldownMS = derived(unlocked, $unlocked => $unlocked.manualMoldyCheeseConversionBoost ? 5000 * 10 : 5000);\n// softcap upgrade when exponent > 1? (currently at >323 bought)\nexport const mcConversionExponent = derived(upgrades, $upgrades => 0.1 + 0.05 * Math.sqrt($upgrades.moldyCheeseConversionExponent.bought + 1));\n// CHEESEYARD STUFF\nexport const cheeseMonsterBrainModeResourceFactors = {\n    peaceful: 1,\n    neutral: 0.2,\n    destructive: 0,\n};\nexport const resourceFactorFromBrainMode = derived(brainMode, $brainMode => cheeseMonsterBrainModeResourceFactors[$brainMode]);\nexport const cheeseMonsterCapacityPerUpgrade = derived(upgrades, $upgrades => $upgrades.cheeseMonsterCapacityPerUpgrade.bought > 0\n    ? 0.1 * Math.pow($upgrades.cheeseMonsterCapacityPerUpgrade.bought + 10, 2)\n    : 10);\n/** per second */\nexport const cheeseMonsterSpawnrate = derived([unlocked, upgrades], ([$unlocked, $upgrades]) => (+$unlocked.cheeseyard * $upgrades.cheeseMonsterSpawnrate.bought) / 3);\nexport const cheeseMonsterDeathRateStats = {\n    peaceful: 0,\n    neutral: 0.01,\n    destructive: 0.1,\n};\nexport const cheeseMonsterDeathrate = derived(brainMode, $brainMode => cheeseMonsterDeathRateStats[$brainMode]);\nexport const cheeseMonsterDropRate = derived(upgrades, $upgrades => 0.1 + 0.05 * $upgrades.cheeseMonsterDropRate.bought);\nexport const totalMonsterDeathsLootBoost = derived([unlocked, totalCheeseMonsterDeaths], ([$unlocked, $totalDeaths]) => $unlocked.cheeseMonsterTotalDeathsBoost ? 1 + 1e-6 * Math.pow($totalDeaths, 2) : 1);\nexport const cheeseMonsterCollectiveSentienceMultiplier = derived([resource, unlocked], ([$resource, $unlocked]) => $unlocked.cheeseMonsterCollectiveSentience ? 1 + 1e-6 * Math.pow($resource.cheeseMonster, 3) : 1);\n// how much each monster boosts thoughts/s (additive per monster)\nexport const monsterThoughtFactor = derived(upgrades, $upgrades => 1 + 1 * $upgrades.cheeseMonsterSentience.bought);\nexport const monsterMoldyCheeseFactor = derived(upgrades, $upgrades => 0.01 * $upgrades.cheeseMonsterMoldiness.bought);\n","import { derived } from 'svelte/store';\nimport { cheeseBoostFactorYield, cheeseCycleAcceleratorFactor, cheeseCyclesThoughtMult, cheeseModeFactor, cheeseMonsterCapacityPerUpgrade, cheeseMonsterDeathrate, cheeseQueueCostDivideBy, cheeseQueueOverclockCostMult, cheeseQueueOverclockSpeedMult, cheeseThoughtMult, cheeseYieldDeltaDuration, cheeseMonsterCollectiveSentienceMultiplier, maxCheeseQueue, mcConversionExponent, mcHalfLifeSeconds, monsterMoldyCheeseFactor, monsterThoughtFactor, resourceFactorFromBrainMode, thoughtMultFromUnlocks, thoughtsPerSecBase, cheeseMonsterDropRate, totalMonsterDeathsLootBoost, moldyCheeseChance, } from './from-primitive';\nimport { cheeseFactoryMode, currentThoughtBoost, resource, unlocked, upgrades } from '../primitive';\nimport { checkBoolForNum } from '@gamelogic/utils';\nconst baseCost = 10;\nexport const cheeseCycleBase = {\n    duration: derived(upgrades, $upgrades => 1000 + cheeseYieldDeltaDuration * $upgrades.cheeseYield.bought),\n    yield: derived(upgrades, $upgrades => 1 + 0.5 * ($upgrades.cheeseYield.bought + $upgrades.cheeseYield.bought * $upgrades.cheeseYield.bought)),\n    cost: derived([cheeseQueueOverclockCostMult, cheeseQueueCostDivideBy], ([$cheeseQueueOverclockCostMult, $cheeseQueueCostDivideBy]) => {\n        return (baseCost * $cheeseQueueOverclockCostMult) / $cheeseQueueCostDivideBy;\n    }),\n};\nexport const cheeseQueueLengthBoostFactor = derived([unlocked, maxCheeseQueue], ([$unlocked, $maxCheeseQueue]) => checkBoolForNum($unlocked.cheeseQueueLengthBoost, ($maxCheeseQueue * $maxCheeseQueue) / 100));\nexport const mcHalflifeBoostFactor = derived([mcHalfLifeSeconds, unlocked], ([$mcHalfLifeSeconds, $unlocked]) => $unlocked.moldyCheeseHalflifeBoost ? 1 + 1e-6 * Math.pow($mcHalfLifeSeconds, 3) : 1);\n/* Reactive variables for Yield, Duration & Cost of the cheese cycle */\nexport const cheeseCycleBatchSize = derived([\n    cheeseCycleBase.yield,\n    cheeseQueueLengthBoostFactor,\n    cheeseBoostFactorYield,\n    cheeseModeFactor,\n    mcHalflifeBoostFactor,\n], ([$cheeseCycleBaseYield, $cheeseQueueLengthBoostFactor, $cheeseBoostFactorYield, $cheeseModeFactor, $mcHalflifeBoostFactor,]) => $cheeseCycleBaseYield *\n    $cheeseQueueLengthBoostFactor *\n    $cheeseBoostFactorYield *\n    $cheeseModeFactor.yield *\n    $mcHalflifeBoostFactor);\nexport const cheeseCycleDuration = derived([cheeseCycleBase.duration, cheeseQueueOverclockSpeedMult, cheeseModeFactor, cheeseCycleAcceleratorFactor], ([$cheeseCycleBaseDuration, $cheeseQueueOverclockSpeedMult, $cheeseModeFactor, $cheeseCycleAcceleratorFactor]) => $cheeseCycleBaseDuration *\n    (1 / $cheeseQueueOverclockSpeedMult) *\n    $cheeseModeFactor.duration *\n    (1 / $cheeseCycleAcceleratorFactor));\nexport const cheeseCycleCost = derived([cheeseCycleBase.cost, cheeseModeFactor], ([$cheeseCycleBaseCost, $cheeseModeFactor]) => $cheeseCycleBaseCost * $cheeseModeFactor.cost);\nexport const mcCycleDurationBoostFactor = derived(cheeseModeFactor, $cheeseModeFactor => Math.pow($cheeseModeFactor.duration, 1.5));\nexport const cheeseMonsterCapacity = derived([upgrades, cheeseMonsterCapacityPerUpgrade], ([$upgrades, $cheeseMonsterCapacityPerUpgrade]) => $cheeseMonsterCapacityPerUpgrade * (1 + $upgrades.cheeseMonsterCapacity.bought));\nexport const cheeseMonsterDeathsPerSec = derived([cheeseMonsterDeathrate, resource], ([$cheeseMonsterDeathrate, $resource]) => $cheeseMonsterDeathrate * $resource.cheeseMonster);\nexport const cheeseMonsterMassacreMultiplier = derived([unlocked, cheeseMonsterDeathsPerSec], ([$unlocked, $cheeseMonsterDeathsPerSec]) => $unlocked.cheeseMonsterMassacre ? 1 + Math.pow($cheeseMonsterDeathsPerSec, 1.3) : 1);\nexport const cheeseMonsterLootAmount = derived([upgrades, cheeseMonsterMassacreMultiplier], ([$upgrades, $cheeseMonsterMassacreMultiplier]) => (1 + $upgrades.cheeseMonsterLoot.bought) * $cheeseMonsterMassacreMultiplier);\nexport const approxCheeseBrainsPerSec = derived([cheeseMonsterDeathsPerSec, cheeseMonsterDropRate, cheeseMonsterLootAmount, totalMonsterDeathsLootBoost], ([$cheeseMonsterDeathsPerSec, $cheeseMonsterDropRate, $cheeseMonsterLootAmount, $totalMonsterDeathsLootBoost]) => $cheeseMonsterDeathsPerSec * $cheeseMonsterDropRate * $cheeseMonsterLootAmount * $totalMonsterDeathsLootBoost);\nexport const monsterThoughtMult = derived([monsterThoughtFactor, resource, resourceFactorFromBrainMode, cheeseMonsterCollectiveSentienceMultiplier], ([$monsterThoughtFactor, $resource, $resourceFactorFromBrainMode, $cheeseMonsterCollectiveSentienceMultiplier]) => 1 +\n    $monsterThoughtFactor *\n        $cheeseMonsterCollectiveSentienceMultiplier *\n        $resource.cheeseMonster *\n        $resourceFactorFromBrainMode);\nexport const monsterMoldyCheeseMult = derived([monsterMoldyCheeseFactor, resource, resourceFactorFromBrainMode], ([$monsterMoldyCheeseFactor, $resource, $resourceFactorFromBrainMode]) => 1 + $monsterMoldyCheeseFactor * $resource.cheeseMonster * $resourceFactorFromBrainMode);\nexport const mcByproductAmount = derived([\n    unlocked,\n    mcConversionExponent,\n    monsterMoldyCheeseMult,\n    cheeseFactoryMode,\n    cheeseCycleBatchSize,\n    mcCycleDurationBoostFactor,\n], ([$unlocked, $mcConversionExponent, $monsterMoldyCheeseMult, $cheeseFactoryMode, $cheeseCycleBatchSize, $mcCycleDurationBoostFactor,]) => $cheeseFactoryMode !== 'warpSpeed'\n    ? Math.pow($cheeseCycleBatchSize, $mcConversionExponent) *\n        $monsterMoldyCheeseMult *\n        ($unlocked.moldyCheeseCycleDurationBoost ? $mcCycleDurationBoostFactor : 1)\n    : 0);\nexport const mcManualConversionAmount = derived([resource, unlocked, mcConversionExponent, monsterMoldyCheeseMult], ([$resource, $unlocked, $mcConversionExponent, $monsterMoldyCheeseMult]) => Math.pow($resource.cheese, $mcConversionExponent) *\n    $monsterMoldyCheeseMult *\n    ($unlocked.manualMoldyCheeseConversionBoost ? 10 : 1));\nexport const thoughtsPerSec = derived([\n    thoughtsPerSecBase,\n    thoughtMultFromUnlocks,\n    currentThoughtBoost,\n    cheeseThoughtMult,\n    cheeseCyclesThoughtMult,\n    monsterThoughtMult,\n], $factors => $factors.reduce((prev, curr) => prev * curr, 1));\n","import { derived } from 'svelte/store';\nimport { highestMilk, resource, upgrades } from '../primitive';\nexport const milkFromReset = derived(resource, $resource => 1e-5 * Math.pow($resource.thoughts, 0.25) * 1e-3 * Math.pow($resource.cheese, 0.5));\nexport const milkPowerPerSec = derived(highestMilk, $highestMilk => 1 * Math.pow($highestMilk, 2));\nconst upgradesToNextTier = [10, 10, 10, 10];\nexport const cummulativeUpgradesToTier = [\n    upgradesToNextTier[0],\n    upgradesToNextTier[0] + upgradesToNextTier[1],\n    upgradesToNextTier[0] + upgradesToNextTier[1] + upgradesToNextTier[2],\n    upgradesToNextTier[0] + upgradesToNextTier[1] + upgradesToNextTier[2] + upgradesToNextTier[3],\n];\nexport const milkUpgradeTier = derived(upgrades, $upgrades => {\n    console.log('milkUpgradeTier');\n    const result = [];\n    let i = 0;\n    for (const upgradeBought of [\n        $upgrades.milkThoughtsGain.bought,\n        $upgrades.milkCheeseGain.bought,\n        $upgrades.milkMoldyCheeseGain.bought,\n        $upgrades.milkMonsterGain.bought,\n    ]) {\n        if (upgradeBought >= cummulativeUpgradesToTier[3])\n            result[i] = 5;\n        else if (upgradeBought >= cummulativeUpgradesToTier[2])\n            result[i] = 4;\n        else if (upgradeBought >= cummulativeUpgradesToTier[1])\n            result[i] = 3;\n        else if (upgradeBought >= cummulativeUpgradesToTier[0])\n            result[i] = 2;\n        else\n            result[i] = 1;\n        i++;\n    }\n    return result;\n});\nconst milkUpgradeEffectFactor = [2, 1.4, 1.2, 0.5];\nexport const milkUpgradeEffect = derived([milkUpgradeTier, upgrades], ([$milkUpgradeTier, $upgrades]) => {\n    const result = [];\n    for (const [upgradeBought, i] of [\n        $upgrades.milkThoughtsGain.bought,\n        $upgrades.milkCheeseGain.bought,\n        $upgrades.milkMoldyCheeseGain.bought,\n        $upgrades.milkMonsterGain.bought,\n    ].entries()) {\n        if (i < 3) {\n            result[i] = Math.pow(milkUpgradeEffectFactor[i], upgradeBought);\n            result[i] *= Math.pow(5, $milkUpgradeTier[i] - 1);\n        }\n        else {\n            result[i] = milkUpgradeEffectFactor[i] * upgradeBought;\n            result[i] *= Math.pow(2, $milkUpgradeTier[i] - 1);\n        }\n    }\n    return result;\n});\n","import { get } from 'svelte/store';\nimport { sendMessage } from './notifications';\nimport * as store from '@store/primitive/to-save';\nimport { upgradesInitial } from '@store';\n// import {compress, decompress} from 'lz-string'\nconst CURRENT_SAVE_VERSION = '0.0.1';\n/**\n * This is the key the save data will be stored under inside localstorage\n */\nconst storageName = 'cogitoErgoSum';\n/**\n * This class holds any data that needs to be saved when the player saves their game.\n * It should only be used for values that must be saved. Anything transient should go directly on the GameModel.\n */\nexport class SaveData {\n    updateFromStores() {\n        for (const key in store)\n            this.data[key] = get(store[key]);\n    }\n    constructor() {\n        this.version = CURRENT_SAVE_VERSION;\n        this.data = {}; // ALL STORE-RELATED DATA\n        this.updateFromStores();\n    }\n}\n/**\n * Load the save data from localstorage.\n * If no data is found just return a new SaveData with default values.\n */\nexport function loadSaveGame() {\n    // using a try/catch in case this fails for some reason\n    try {\n        // see if data exists first\n        if (localStorage.getItem(storageName) !== null) {\n            // get data from localstorage, decompress it using lz-string, then parse it back into a javascript object\n            const saveDataFromLocalStorage = JSON.parse(localStorage.getItem(storageName));\n            // sendMessage(\"Savefile loaded.\")\n            console.log('saveData loaded:');\n            console.log(saveDataFromLocalStorage);\n            // migrate the data so we know it is good to use\n            dataMigrate(saveDataFromLocalStorage);\n            hydrateStores(saveDataFromLocalStorage);\n            // update the saveData object with the freshly hydrated stores\n            // saveData.updateFromStores()\n            // update all the other data that is not from stores\n            // saveData.updateFromLocalStorage(saveDataFromLocalStorage)\n        }\n        else {\n            console.log('No save found, created new one.');\n        }\n    }\n    catch (error) {\n        console.error(error); // log the error so at least we can see it\n    }\n}\n/**\n * Loads the data from localStorage into the stores.\n */\nfunction hydrateStores(fromStorage) {\n    for (const key in store) {\n        if (fromStorage.data[key] !== undefined)\n            store[key].set(fromStorage.data[key]);\n    }\n    console.log('Stores hydrated.');\n}\n/**\n * Saves the data to localstorage\n * @param saveData SaveData\n */\nexport function saveSaveGame() {\n    if (saveData !== null) {\n        store.lastSaved.set(Date.now());\n        // update the saveData object with all the current values of all the necessary stores\n        saveData.updateFromStores();\n        try {\n            // Use JSON.stringify to turn the object into a string, then compress with lz-string,\n            // before setting it in localstorage\n            localStorage.setItem(storageName, JSON.stringify(saveData));\n            /* console.log('saveData saved:')\n            console.log(saveData) */\n        }\n        catch (error) {\n            console.error(error); // log the error so at least we can see it\n        }\n    }\n}\nexport function exportSaveGame() {\n    if (saveData !== null) {\n        saveData.updateFromStores();\n        return JSON.stringify(saveData);\n    }\n    return 'Error: saveData is null.';\n}\nexport function importSaveGame(data) {\n    try {\n        const importedSaveData = JSON.parse(data);\n        dataMigrate(importedSaveData);\n        hydrateStores(importedSaveData);\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n/**\n * This function will help to update any data that was saved before new variables were added.\n * Otherwise this can cause errors when something you expected to be there is not there.\n */\nfunction dataMigrate(fromStorage) {\n    console.log('Migrating saveData...');\n    // create a new saveData to use as a reference\n    const master = new SaveData();\n    console.log('fromStorage', fromStorage.version);\n    if (typeof fromStorage.version !== 'string') {\n        // TODO: define more rigorous type\n        console.log('Corrupted save file found: Invalid version number: ' + typeof fromStorage.version);\n        return;\n    }\n    if (fromStorage.version !== master.version) {\n        console.log('Outdated version save file found:' + fromStorage.version + ' (Current version: ' + master.version + ')');\n        // Logic for upgrading to newer versions goes here.\n    }\n    // get an array of the properties of saveData\n    // would also return functions of an object, but NOT methods from a class apparently, so it's fine\n    const propertiesMaster = Object.getOwnPropertyNames(master.data);\n    // check if data property exists?\n    const propertiesFromStorage = Object.getOwnPropertyNames(fromStorage.data);\n    // check each property to make sure it exists on the save data, if not add it\n    propertiesMaster.forEach(prop => {\n        if (typeof fromStorage.data[prop] === 'undefined') {\n            console.log(`${prop} was undefined, adding it to saveData`);\n            fromStorage.data[prop] = master.data[prop];\n        }\n        else if (typeof fromStorage.data[prop] === 'object') {\n            // console.log(prop, 'is an object')\n            const innerPropertiesMaster = Object.getOwnPropertyNames(master.data[prop]);\n            // console.log('innerProperties', innerProperties)\n            innerPropertiesMaster.forEach(innerProp => {\n                if (typeof fromStorage.data[prop][innerProp] === 'undefined') {\n                    console.log(`${prop}.${innerProp} was undefined, adding it to saveData`);\n                    fromStorage.data[prop][innerProp] = master.data[prop][innerProp];\n                }\n            });\n        }\n    });\n    // check if there are properties which are deprecated or deleted in a newer version, if so delete them\n    propertiesFromStorage.forEach(prop => {\n        if (typeof master.data[prop] === 'undefined') {\n            console.log(`${prop} should not be in saveData, deleting it from saveData`);\n            fromStorage.data[prop] = master.data[prop];\n            Reflect.deleteProperty(fromStorage.data, prop);\n        }\n        else if (typeof master.data[prop] === 'object') {\n            const innerPropertiesFromStorage = Object.getOwnPropertyNames(fromStorage.data[prop]);\n            innerPropertiesFromStorage.forEach(innerProp => {\n                if (typeof master.data[prop][innerProp] === 'undefined') {\n                    console.log(`${prop}.${innerProp} should not be in saveData, deleting it from saveData`);\n                    Reflect.deleteProperty(fromStorage.data[prop], innerProp);\n                }\n            });\n        }\n    });\n    console.log('Migration complete.');\n}\n/**\n * Resets saveGame in localstorage, resets all the stores and updates the savaData accordingly.\n */\nexport function resetSaveGame() {\n    // update the stored gameModel with a new one\n    resetStores();\n    if (saveData !== null)\n        saveData.updateFromStores();\n    sendMessage('Game reset.');\n}\n/**\n * Resets all the stores to their default starting values. (NewGame)\n */\nfunction resetStores() {\n    for (const key in store)\n        store[key].reset();\n}\n/**\n * If there already is a saved game, but eg. the base cost of an upgrade changes or its cost multiplier,\n * this function will recalculate the current price for the upgrade\n * Also can be utilized for possible upgrades where the base cost or multiplier of another upgrade changes.\n */\nexport function recalculateStores() {\n    let upgrades = {};\n    // maybe change to store.upgrades.update() instead?\n    const unsubscribe = store.upgrades.subscribe($store => {\n        upgrades = $store;\n    });\n    for (const [key, value] of Object.entries(upgrades)) {\n        value.maxBuy = upgradesInitial[key].maxBuy;\n        if (typeof value.maxBuy === 'number' && value.bought > value.maxBuy)\n            value.bought = value.maxBuy;\n        value.costMultiplier = upgradesInitial[key].costMultiplier;\n        value.cost = upgradesInitial[key].cost * Math.pow(upgradesInitial[key].costMultiplier, value.bought);\n    }\n    store.upgrades.refresh();\n    unsubscribe();\n}\n/**\n * This is where all the important game data to be saved is stored.\n */\nconst saveData = new SaveData();\nloadSaveGame();\n","<script lang=\"ts\">\r\n  import { devToolsEnabled, resource } from '@store'\r\n  import { recalculateStores } from '@gamelogic/saveload'\r\n</script>\r\n\r\n{#if $devToolsEnabled}\r\n  <div id=\"devTools\">\r\n    <div id=\"devControls\">\r\n      <strong>Developer Tools</strong>\r\n      <button on:click={recalculateStores}>Recalc Stores</button>\r\n\r\n      <span>thoughts</span>\r\n      <input type=\"number\" bind:value={$resource.thoughts} />\r\n      <div style=\"display:flex;\">\r\n        <button on:click={() => ($resource.thoughts += 100)}>+100</button>\r\n        <button on:click={() => ($resource.thoughts += 1000)}>+1K</button>\r\n        <button on:click={() => ($resource.thoughts += 10000)}>+10K</button>\r\n        <button on:click={() => ($resource.thoughts += 100000)}>+100K</button>\r\n        <button on:click={() => ($resource.thoughts += 1000000)}>+1M</button>\r\n      </div>\r\n\r\n      <span>cheese</span>\r\n      <input type=\"number\" bind:value={$resource.cheese} />\r\n      <div style=\"display:flex;\">\r\n        <button on:click={() => ($resource.cheese += 100)}>+100</button>\r\n        <button on:click={() => ($resource.cheese += 1000)}>+1K</button>\r\n        <button on:click={() => ($resource.cheese += 10000)}>+10K</button>\r\n        <button on:click={() => ($resource.cheese += 100000)}>+100K</button>\r\n        <button on:click={() => ($resource.cheese += 1000000)}>+1M</button>\r\n      </div>\r\n\r\n      <span>moldy cheese</span>\r\n      <input type=\"number\" bind:value={$resource.moldyCheese} />\r\n      <div style=\"display:flex;\">\r\n        <button on:click={() => ($resource.moldyCheese += 100)}>+100</button>\r\n        <button on:click={() => ($resource.moldyCheese += 1000)}>+1K</button>\r\n        <button on:click={() => ($resource.moldyCheese += 10000)}>+10K</button>\r\n        <button on:click={() => ($resource.moldyCheese += 100000)}>+100K</button>\r\n        <button on:click={() => ($resource.moldyCheese += 1000000)}>+1M</button>\r\n      </div>\r\n\r\n      <span>cheese monsters</span>\r\n      <input type=\"number\" bind:value={$resource.cheeseMonster} />\r\n\r\n      <span>cheese Brains</span>\r\n      <input type=\"number\" bind:value={$resource.cheeseBrains} />\r\n\r\n      <span>milk</span>\r\n      <input type=\"number\" bind:value={$resource.milk} />\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  #devTools {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 1;\r\n    background-color: rgb(0, 0, 0, 0.8);\r\n  }\r\n  #devTools > #devControls {\r\n    margin: 24px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\n  import { unlocked } from '@store'\n\n  function toggleUnlock(name: string): void {\n    $unlocked[name] = !$unlocked[name]\n\n    console.log($unlocked[name])\n  }\n</script>\n\n<div>\n  {#each Object.entries($unlocked) as [name, isUnlocked], id}\n    <button on:click={() => toggleUnlock(name)}>\n      {id}\n      {name}\n      {isUnlocked ? '✅' : '❌'}\n    </button>\n  {/each}\n</div>\n\n<style>\n  div {\n    display: grid;\n    position: absolute;\n    z-index: 1;\n  }\n  button {\n    border: 1px solid rgba(0, 0, 0, 1);\n  }\n</style>\n","<script lang=\"ts\">\n  import { fade } from 'svelte/transition'\n\n  export let title = ''\n  export let themeColor1: string\n  export let themeColor2: string\n\n  const style = `--themeColor1: ${themeColor1}; --themeColor2: ${themeColor2};`\n</script>\n\n<div class=\"container \" data-title={title} transition:fade={{ duration: 1000 }} {style}>\n  <!-- <div class=\"header\">\n    <span class=\"windowTitle\">{title}</span>\n  </div> -->\n  <div class=\"content\">\n    <slot />\n  </div>\n\n  <div class=\"corner\" id=\"corner-top-right\" />\n  <div class=\"corner\" id=\"corner-top-left\" />\n  <div class=\"corner\" id=\"corner-bottom-right\" />\n  <div class=\"corner\" id=\"corner-bottom-left\" />\n</div>\n\n<style>\n  .container {\n    position: relative;\n    width: max-content;\n    height: max-content;\n    /* box-shadow: 0 0 4px 0.25px black; */\n    background-color: var(--Gray900);\n\n    outline: 1px black solid;\n\n    border-left: var(--themeColor2);\n    border-right: var(--themeColor2);\n    border-top: var(--themeColor1);\n    border-bottom: var(--themeColor1);\n    border-width: 2px;\n    border-style: solid;\n    border-radius: 4px;\n    box-shadow: 0 0 5px 1px var(--themeColor1), inset 0 0 1px 2px rgba(0, 0, 0, 0.4);\n  }\n\n  .content {\n    width: var(--width, var(--window-width));\n    /*  position: relative; */\n    display: flex;\n    flex-direction: column;\n    row-gap: 16px;\n    padding: 16px;\n    margin-top: 10px;\n\n    /*border-radius: 8px;*/\n  }\n  .container::before {\n    content: attr(data-title);\n    position: absolute;\n    bottom: calc(100% - 12px);\n    left: 16%;\n    width: 68%;\n    font-size: 16px;\n    font-weight: bold;\n    text-align: center;\n    text-shadow: 1px 1px 4px black;\n    color: white;\n\n    padding: 4px;\n    background: linear-gradient(90deg, var(--themeColor1) 0%, var(--themeColor2) 100%);\n\n    outline: 1px black solid;\n    border-left: var(--themeColor2);\n    border-right: var(--themeColor2);\n    border-top: var(--themeColor2);\n    border-bottom: var(--themeColor1);\n    border-width: 2px;\n    border-style: solid;\n    border-radius: 0px;\n    border-top-right-radius: 12px;\n    border-top-left-radius: 12px;\n  }\n  /* .container::after {\n    content: '';\n    position: absolute;\n    border-image: linear-gradient(90deg, rgb(129, 0, 204) 0%, rgb(182, 122, 255) 100%);\n    border-image-width: 10px;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  } */\n  .corner {\n    --size: 10px;\n    z-index: 0;\n    position: absolute;\n    width: var(--size);\n    height: var(--size);\n    shape-rendering: geometricPrecision;\n  }\n  #corner-top-left {\n    top: 0;\n    left: 0;\n    background: conic-gradient(from -45deg, var(--themeColor1), var(--themeColor2));\n    border-bottom-right-radius: 10px;\n    box-shadow: 1px 1px 0px 1px rgba(0, 0, 0, 0.4);\n  }\n  #corner-top-right {\n    top: 0;\n    right: 0;\n    background: conic-gradient(from 45deg, var(--themeColor2), var(--themeColor1));\n    border-bottom-left-radius: 10px;\n    box-shadow: -1px 1px 0px 1px rgba(0, 0, 0, 0.4);\n  }\n  #corner-bottom-left {\n    bottom: 0;\n    left: 0;\n    background: conic-gradient(from -135deg, var(--themeColor2), var(--themeColor1));\n    border-top-right-radius: 10px;\n    box-shadow: 1px -1px 0px 1px rgba(0, 0, 0, 0.4);\n  }\n  #corner-bottom-right {\n    bottom: 0;\n    right: 0;\n    background: conic-gradient(from 135deg, var(--themeColor1), var(--themeColor2));\n    border-top-left-radius: 10px;\n    box-shadow: -1px -1px 0px 1px rgba(0, 0, 0, 0.4);\n  }\n</style>\n","<script lang=\"ts\">\r\n  export let top = 0\r\n  export let left = 0\r\n  export let data: unknown = 'No Tooltip'\r\n\r\n  /* const style = `top: ${rect.bottom + 10}px; left: ${rect.left + 4}px;` */\r\n  const style = `top: ${top}px; left: ${left + 4}px;`\r\n</script>\r\n\r\n<div class=\"tooltip-arrow-up\" {style}>\r\n  {#if typeof data === 'string'}\r\n    {@html data}\r\n  {:else}\r\n    Error: Invalid tooltip data type\r\n  {/if}\r\n</div>\r\n","import {} from 'svelte/internal';\nimport Tooltip from './Tooltip.svelte';\nexport var Direction;\n(function (Direction) {\n    Direction[\"TOP\"] = \"top\";\n    Direction[\"RIGHT\"] = \"right\";\n    Direction[\"LEFT\"] = \"left\";\n    Direction[\"BOTTOM\"] = \"bottom\";\n})(Direction || (Direction = {}));\nexport function tooltip(element, options) {\n    var _a, _b;\n    let tooltipComponent;\n    const TooltipConstructor = (_a = options.Component) !== null && _a !== void 0 ? _a : Tooltip;\n    let tooltipData = (_b = options.data) !== null && _b !== void 0 ? _b : null;\n    let mousePressed = false;\n    let tooltipShown = false;\n    function mouseEnter(_event) {\n        var _a, _b, _c, _d;\n        if (tooltipData === null || mousePressed)\n            return;\n        let rect;\n        let top;\n        let left;\n        if (options.anchor === 'parentElement') {\n            rect = (_b = (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) !== null && _b !== void 0 ? _b : new DOMRect(0, 0, 0, 0);\n        }\n        else if (options.anchor === 'offsetParent') {\n            rect = (_d = (_c = element.offsetParent) === null || _c === void 0 ? void 0 : _c.getBoundingClientRect()) !== null && _d !== void 0 ? _d : new DOMRect(0, 0, 0, 0);\n        }\n        else {\n            rect = element.getBoundingClientRect();\n        }\n        if (options.direction === Direction.RIGHT) {\n            top = rect.top;\n            left = rect.right + 8;\n        }\n        else {\n            top = rect.bottom + 10;\n            left = rect.left;\n        }\n        tooltipComponent = new TooltipConstructor({\n            props: {\n                data: tooltipData,\n                top,\n                left,\n            },\n            target: document.body,\n        });\n        tooltipShown = true;\n    }\n    function mouseLeave() {\n        if (tooltipData === null || mousePressed)\n            return;\n        tooltipComponent.$destroy();\n    }\n    function mouseMove(_event) {\n        if (tooltipData === null || !mousePressed || !tooltipShown)\n            return;\n        tooltipComponent.$destroy();\n        tooltipShown = false;\n        /*  tooltipComponent.$set({\n          x: event.pageX,\n          y: event.pageY,\n        }) */\n    }\n    function mouseDown(_event) {\n        mousePressed = true;\n    }\n    function mouseUp(event) {\n        mousePressed = false;\n        if (!tooltipShown)\n            mouseEnter(event);\n    }\n    element.addEventListener('mouseenter', mouseEnter);\n    element.addEventListener('mousemove', mouseMove);\n    element.addEventListener('mouseleave', mouseLeave);\n    element.addEventListener('mousedown', mouseDown);\n    element.addEventListener('mouseup', mouseUp);\n    return {\n        // is called whenever the parameter (options) changes\n        // argument is the new parameter\n        update({ data }) {\n            // update the local variable from here, else the tooltip would reset\n            // to the starting value if it's destroyed and created again\n            tooltipData = data;\n            // programmatically sets props on an instance. component.$set({ x: 1 })\n            // is equivalent to x = 1 inside the component's <script> block.\n            if (tooltipComponent !== undefined)\n                tooltipComponent.$set({ data });\n        },\n        destroy() {\n            if (tooltipComponent !== undefined)\n                tooltipComponent.$destroy();\n            element.removeEventListener('mouseenter', mouseEnter);\n            element.removeEventListener('mousemove', mouseMove);\n            element.removeEventListener('mouseleave', mouseLeave);\n            element.removeEventListener('mousedown', mouseDown);\n            element.removeEventListener('mouseup', mouseUp);\n        },\n    };\n}\n","<script lang=\"ts\">\r\n  import { formatResourceName, formatWhole } from '@gamelogic/utils'\r\n  import { resource } from '@store'\r\n  import type { IUnlock, unlockType } from '@store'\r\n\r\n  export let data: IUnlock\r\n  export let top: number\r\n  export let left: number\r\n  // export let rect: DOMRect\r\n  const style = `top: ${top}px; left: ${left}px;`\r\n\r\n  $: costColor = $resource[data.resource] > data.cost ? 'rgb(102, 255, 102)' : 'rgb(255, 102, 102)'\r\n\r\n  const background: Record<unlockType, string> = {\r\n    Boost: 'linear-gradient(to top, var(--Gray400) 20%, white 80%)',\r\n    Unlock: 'linear-gradient(0deg, yellow 20%, rgba(255,251,125,1) 80%',\r\n    Mechanic: 'green',\r\n    Effect: 'blue',\r\n  }\r\n</script>\r\n\r\n<div id=\"window\" {style}>\r\n  <span id=\"title\">{data.title}</span>\r\n  <hr />\r\n  <span id=\"description\">{@html data.description}</span>\r\n  <span id=\"tooltip\">{@html data.tooltipText}</span>\r\n\r\n  <div style=\"display: flex; flex-direction:row; justify-content: space-between; margin-top: 4px \">\r\n    <div id=\"type\" style=\"background:{background.Boost}\">{data.type}</div>\r\n    <div id=\"cost\" style=\"color:{costColor}\">{formatWhole(data.cost)} {formatResourceName(data.resource)}</div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  * {\r\n    --width: 300px;\r\n    --padding: 12px;\r\n  }\r\n  #window {\r\n    position: relative;\r\n    background: radial-gradient(var(--Gray900), var(--background-color));\r\n    border: 1px var(--color) solid;\r\n    box-shadow: 4px 4px 4px black;\r\n\r\n    width: var(--width);\r\n    height: max-content;\r\n    /* border: 1px solid var(--secondary); */\r\n    padding: var(--padding);\r\n    position: absolute;\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    gap: 0rem;\r\n    /*     box-shadow: 4px 4px var(--Gray900); */\r\n  }\r\n  hr {\r\n    width: 250px;\r\n    border: 0;\r\n    height: 1px;\r\n    background-image: linear-gradient(to right, transparent, rgba(var(--color-rgb), 0.75), transparent);\r\n  }\r\n  #title {\r\n    font-size: 14px;\r\n  }\r\n  #type {\r\n    font-weight: bold;\r\n    width: max-content;\r\n    border-radius: 4px;\r\n    color: black;\r\n    outline: 1px solid black;\r\n    border: 1px solid var(--Gray500);\r\n    padding: 2px;\r\n  }\r\n  #description {\r\n    margin-bottom: 8px;\r\n  }\r\n  #tooltip {\r\n    opacity: var(--medium-emphasis);\r\n    font-style: oblique;\r\n    text-align: right;\r\n    margin-bottom: 4px;\r\n    margin-left: 20px;\r\n  }\r\n  #cost {\r\n    align-self: flex-end;\r\n    font-weight: bold;\r\n    text-align: right;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\n  import { formatWhole } from '../gamelogic/utils'\n  import { unlocked, resource, type IUnlock } from '@store'\n  import { Direction, tooltip } from './tooltips/tooltip'\n  import UnlockTooltip from './tooltips/UnlockTooltip.svelte'\n\n  export let unlock: IUnlock\n  export let tempCount: number\n  export let folderName: string\n\n  function unlockFeature(): void {\n    const cost: number = unlock.cost\n    if ($resource[unlock.resource] < cost || $unlocked[unlock.name]) return\n    $resource[unlock.resource] -= cost\n    unlocked.update($unlocked => {\n      $unlocked[unlock.name] = true\n      return $unlocked\n    })\n  }\n</script>\n\n<div style=\"height:max-content; width: max-content\">\n  <button\n    on:click={unlockFeature}\n    data-cost={formatWhole(unlock.cost)}\n    data-unlockType={unlock.type}\n    class:disabled={$unlocked[unlock.name] || $resource[unlock.resource] < unlock.cost}\n    class:unlocked={$unlocked[unlock.name]}\n    use:tooltip={{ data: unlock, Component: UnlockTooltip, direction: Direction.RIGHT, anchor: 'offsetParent' }}\n  >\n    <img alt=\"upgrade icon\" src={`assets/${folderName}/PNG/${tempCount + 1}.png`} draggable=\"false\" />\n  </button>\n</div>\n\n<style>\n  button.disabled {\n    filter: saturate(50%);\n  }\n\n  button {\n    z-index: 1;\n    position: relative;\n    width: 60px;\n    height: 60px;\n    background-color: var(--Gray800);\n    border: 1px var(--Gray500) solid;\n    border-radius: 0px;\n    outline: 2px solid rgba(0, 0, 0, 0.6);\n    padding: 2px;\n  }\n\n  button:not(.disabled):not(.unlocked):hover {\n    filter: contrast(150%);\n    outline: 2px solid rgba(0, 0, 0, 1);\n    border: 1px var(--themeColor2) solid;\n    box-shadow: 0 0 5px 1px var(--themeColor1);\n  }\n  button:not(.disabled):not(.unlocked):active {\n    border: 2px var(--themeColor2) solid;\n    outline: 1px solid rgba(0, 0, 0, 0.6);\n  }\n  button.unlocked {\n    opacity: 1;\n    filter: contrast(150%);\n    border: 2px rgba(255, 255, 255, 0.6) solid;\n    outline: 1px solid rgba(0, 0, 0, 0.6);\n    /* box-shadow: 0 0 2px 1px var(--themeColor1); */\n  }\n\n  /*  button::before {\n    content: attr(data-cost);\n    position: absolute;\n    height: 14px;\n    bottom: -18px;\n    left: 0;\n    width: 100%;\n    background-color: rgba(0, 0, 0, 0);\n    outline: 0px solid black;\n    margin-right: 2px;\n  } */\n  /* button::after {\n    content: attr(data-unlockType);\n    color: rgb(255, 255, 61);\n    text-shadow: 1px 1px 4px black;\n    position: absolute;\n    bottom: 2px;\n    left: 4px;\n  } */\n  button > img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n</style>\n","<script lang=\"ts\">\n  import { unlocked, type IUnlock } from '@store'\n  import UnlockIcon from './UnlockIcon.svelte'\n\n  export let unlocks: IUnlock[]\n  export let folderName = ''\n</script>\n\n<div style=\"position:relative; width: max-content; height: max-content\">\n  <div class=\"unlockDrawer grid theme-border\">\n    {#each unlocks as unlock, tempCount}\n      {#if !$unlocked[unlock.name] && $unlocked[unlock.availableAt ?? 'start']}\n        <UnlockIcon {unlock} {tempCount} {folderName} />\n      {/if}\n    {/each}\n  </div>\n</div>\n\n<style>\n  * {\n    --slots: 4;\n    --pad: 2px;\n  }\n\n  .grid {\n    padding: var(--pad);\n    height: 60px;\n    width: calc(var(--slots) * 60px + (var(--slots) - 1) * 2px);\n    display: grid;\n    grid-template-columns: repeat(var(--slots), 60px);\n    grid-template-rows: 100px; /* -> so overflow is hidden far beneath */\n    gap: 2px;\n    overflow: hidden;\n    justify-items: center;\n  }\n  .unlockDrawer {\n    position: relative;\n    background-color: var(--Gray800);\n\n    /* outline: 1px solid rgba(0, 0, 0, 0.6);\n    border-left: var(--themeColor2);\n    border-right: var(--themeColor1);\n    border-top: var(--themeColor2);\n    border-bottom: var(--themeColor1);\n    border-width: 2px;\n    border-style: solid; */\n  }\n</style>\n","<script lang=\"ts\">\n  import { formatWhole, formatResourceName } from '@gamelogic/utils'\n  import { buyUpgrade } from '@gamelogic/buy-upgrade'\n  import { upgrades, resource, LORCA_OVERRIDE } from '@store'\n  import { tooltip } from './tooltips/tooltip'\n  import { derived, get } from 'svelte/store'\n  import { fade } from 'svelte/transition'\n\n  export let upgradeName: string\n  export let tooltipText: string | null = null\n  export let buyMaxUpgrades = false // setContext/getContext better?\n  export let btnUnlocked = true\n\n  const resourceName = get(upgrades)[upgradeName].resource\n  const cost = derived(upgrades, $upgrades => $upgrades[upgradeName].cost)\n  const canAfford = derived(resource, $resource => $resource[resourceName] >= get(cost))\n  const maxBuy = derived(upgrades, $upgrades => $upgrades[upgradeName].maxBuy)\n  const isMaxed = derived(upgrades, $upgrades => {\n    const maxBuy = $upgrades[upgradeName].maxBuy\n    return maxBuy !== null && $upgrades[upgradeName].bought >= maxBuy\n  })\n  const upgradesBought = derived(upgrades, $upgrades => $upgrades[upgradeName].bought)\n\n  // beforeUpdate(() => console.log('beforeUpdate'))\n\n  function handleUpgradeClicked(): void {\n    buyUpgrade(upgrades)(upgradeName, buyMaxUpgrades)\n  }\n</script>\n\n{#if btnUnlocked || $LORCA_OVERRIDE}\n  <button\n    on:click={handleUpgradeClicked}\n    class:disabled={!$canAfford}\n    use:tooltip={{ data: tooltipText }}\n    class:maxed={$isMaxed}\n    transition:fade={{ duration: 1000 }}\n  >\n    <div style=\"display:grid; grid-template-rows: auto 14px; height: 100%\">\n      <div id=\"text\">\n        <slot />\n      </div>\n      <div id=\"cost\">\n        {#if !$isMaxed}\n          {formatWhole($cost)}\n          {formatResourceName(resourceName)}\n        {/if}\n      </div>\n    </div>\n\n    <div id=\"boughtContainer\">\n      {#if $maxBuy !== null}\n        {#if $isMaxed}\n          MAX\n        {:else}\n          {$upgradesBought}/{$maxBuy}\n        {/if}\n      {:else}\n        {$upgradesBought}\n      {/if}\n    </div>\n  </button>\n{:else}\n  <button disabled>???</button>\n{/if}\n\n<style>\n  #text {\n    height: 100%;\n    padding-left: 4px;\n    padding-right: 4px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  #cost {\n    z-index: 0;\n    height: max-content;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    border-top: 1px solid rgba(255, 255, 255, 0.2);\n    background-color: rgba(0, 0, 0, 0.2);\n\n    /* background-color: rgba(8, 248, 0, 0.4);\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.4) 0%, transparent 40%); */\n  }\n  #boughtContainer {\n    position: absolute;\n    right: -2px;\n    bottom: -2px;\n    height: max-content;\n    min-width: 24px;\n    width: max-content;\n    padding: 2px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0%;\n    background-color: var(--themeColor1);\n    outline: 1px solid rgba(0, 0, 0, 0.6);\n    border-top: 2px solid rgba(255, 255, 255, 0.6);\n    border-left: 2px solid rgba(255, 255, 255, 0.6);\n    border-bottom: 2px solid rgba(0, 0, 0, 0.6);\n    border-right: 2px solid rgba(0, 0, 0, 0.6);\n    border-top-left-radius: 8px;\n  }\n  button {\n    min-height: 50px;\n    height: 60px;\n    width: 200px;\n    position: relative;\n    padding: 0px;\n  }\n\n  button.disabled {\n    opacity: var(--disabled); /* override */\n  }\n  button:not(.disabled):hover {\n    /*  outline: 1px solid white; */\n    background-color: var(--Gray600);\n  }\n\n  .maxed {\n    background: linear-gradient(to bottom, var(--themeColor1), rgba(0, 0, 0, 0.6));\n    color: var(--themeColor2, white);\n    pointer-events: none;\n\n    border-left: var(--themeColor2);\n    border-right: var(--themeColor1);\n    border-top: var(--themeColor2);\n    border-bottom: var(--themeColor1);\n    border-width: 2px;\n    border-style: solid;\n  }\n</style>\n","import { get } from 'svelte/store';\nimport { resource } from '@store';\nexport function buyUpgrade(upgrades) {\n    // - upgrades is scoped here -\n    return function (upgradeName, buyMaxUpgrades = false) {\n        upgrades.update($store => {\n            // what if property upgradeName doesnt exist on $store?\n            const upgrade = $store[upgradeName];\n            let checkoutCost = 0;\n            const res = get(resource)[upgrade.resource];\n            if (res < upgrade.cost)\n                return $store;\n            if (!buyMaxUpgrades) {\n                // PURCHASE SINGLE:\n                checkoutCost = upgrade.cost;\n                upgrade.cost *= upgrade.costMultiplier;\n                upgrade.bought++;\n            }\n            else {\n                // PURCHASE MAX:\n                const cost = upgrade.cost;\n                const costMult = upgrade.costMultiplier;\n                // used formulas for geometric series (because of the exponential cost curve of the upgrades)\n                const numUpgradesAffordable = Math.floor(Math.log((res / cost) * (costMult - 1) + 1) / Math.log(costMult));\n                const totalPrice = (cost * (Math.pow(costMult, numUpgradesAffordable) - 1)) / (costMult - 1);\n                checkoutCost = totalPrice;\n                upgrade.cost *= Math.pow(costMult, numUpgradesAffordable);\n                upgrade.bought += numUpgradesAffordable;\n                // alert(\"Upgrades affordable: \" + numUpgradesAffordable + \", Total Prize: \" + totalPrice)\n            }\n            resource.update($resource => {\n                $resource[upgrade.resource] -= checkoutCost;\n                return $resource;\n            });\n            return $store;\n        });\n    };\n}\n","<script lang=\"ts\">\n  export let title = 'Effects'\n</script>\n\n<div id=\"effectContainer\" class=\"theme-border\">\n  <div id=\"effectHeader\">\n    <span style=\"text-align:center\">{title}</span>\n    <hr />\n  </div>\n  <div id=\"effectBody\">\n    <slot />\n  </div>\n</div>\n\n<style>\n  #effectContainer {\n    width: 100%;\n    min-height: max-content;\n    background-color: var(--Gray800);\n    overflow: hidden;\n  }\n  #effectHeader {\n    width: 100%;\n    margin-top: 0.5rem;\n    text-align: center;\n  }\n  #effectBody {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    padding-bottom: 0.5rem;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  #effectContainer hr {\n    width: 200px;\n    border: 0;\n    height: 1px;\n    background-image: linear-gradient(to right, var(--Gray800), rgba(255, 255, 255, 0.75), var(--Gray800));\n  }\n</style>\n","<script lang=\"ts\">\n  import { formatNumber } from '../gamelogic/utils'\n  import { fade } from 'svelte/transition'\n  import { tooltip } from './tooltips/tooltip'\n\n  export let factor: number\n  export let unlocked = true\n  export let tooltipText: string | null = null\n</script>\n\n{#if unlocked}\n  <span\n    class=\"effect\"\n    transition:fade={{ duration: 1000 }}\n    use:tooltip={{ data: tooltipText }}\n    class:bg-on-hover={tooltipText !== null}\n  >\n    <slot>No Description</slot>\n    [<span style=\"color:var(--themeColor2)\">{formatNumber(factor, 2)}x</span>]\n  </span>\n{/if}\n\n<style>\n  .effect {\n    position: relative;\n    padding-left: 1rem;\n  }\n  .effect::before {\n    content: '⯁ ';\n    color: var(--themeColor2);\n    position: absolute;\n    top: -0.125rem;\n    left: 0.125rem;\n  }\n</style>\n","<script lang=\"ts\">\r\n  import Window from './window-model/Window.svelte'\r\n  import UnlockDrawer from '../UnlockDrawer.svelte'\r\n  import { formatNumber, formatTime } from '@gamelogic/utils'\r\n  import UpgradeButton from '../UpgradeButton.svelte'\r\n  import {\r\n    unlocks,\r\n    LORCA_OVERRIDE,\r\n    resource,\r\n    unlocked,\r\n    upgrades,\r\n    currentThoughtBoost,\r\n    currentThoughtBoostTime,\r\n    thoughtBoostMax,\r\n    thoughtBoostDuration,\r\n    thoughtBoostMaxStacks,\r\n    thoughtsPerSec,\r\n    thoughtsPerSecBase,\r\n    UnlockName,\r\n  } from '@store'\r\n\r\n  import { onMount } from 'svelte'\r\n  import { derived, get } from 'svelte/store'\r\n  import EffectComponent from '../EffectComponent.svelte'\r\n  import Effect from '../Effect.svelte'\r\n\r\n  const buyMaxUpgrades = false\r\n  let thoughtBoostCurrentStacks = 0\r\n  const thoughtBoostDecay = 2000\r\n  let lastTime: number | null = null\r\n  let myReq: number\r\n\r\n  $: thoughtAccelDisplay =\r\n    $upgrades.thoughtAcceleration.bought > 0\r\n      ? ($thoughtsPerSec / $upgrades.thoughtAcceleration.bought) * (1 - 1 / $thoughtsPerSecBase)\r\n      : 1\r\n  $: thoughtJerkDisplay = $thoughtsPerSec / $thoughtsPerSecBase\r\n\r\n  function handleThink(): void {\r\n    if (!$unlocked.thoughtBoost) {\r\n      $resource.thoughts += 1\r\n      return\r\n    }\r\n    // set multiplier, which expires after a time and starts decaying\r\n    $currentThoughtBoost = $thoughtBoostMax\r\n\r\n    if ($unlocked.thoughtBoostStack) {\r\n      if (thoughtBoostCurrentStacks < $thoughtBoostMaxStacks) {\r\n        $currentThoughtBoostTime += $thoughtBoostDuration\r\n        thoughtBoostCurrentStacks++\r\n      } else $currentThoughtBoostTime = $thoughtBoostDuration * $thoughtBoostMaxStacks\r\n    } else $currentThoughtBoostTime = $thoughtBoostDuration\r\n\r\n    cancelAnimationFrame(myReq)\r\n    myReq = requestAnimationFrame(animateThoughtBoost)\r\n  }\r\n\r\n  function animateThoughtBoost(currentTime: number): void {\r\n    if (lastTime === null) lastTime = currentTime\r\n    const deltaT = Math.max(Math.min(currentTime - lastTime, 1000), 0)\r\n    lastTime = currentTime\r\n\r\n    if ($currentThoughtBoostTime > 0) {\r\n      $currentThoughtBoostTime -= deltaT\r\n      thoughtBoostCurrentStacks = Math.ceil($currentThoughtBoostTime / $thoughtBoostDuration)\r\n\r\n      if ($currentThoughtBoostTime < 0) $currentThoughtBoostTime = 0\r\n    } else {\r\n      thoughtBoostCurrentStacks = 0\r\n      // decrement evenly over {thoughtBoostDecay} milliseconds\r\n      $currentThoughtBoost -= (($thoughtBoostMax - 1) / thoughtBoostDecay) * deltaT\r\n      if ($currentThoughtBoost <= 1) {\r\n        $currentThoughtBoost = 1\r\n      }\r\n    }\r\n    if ($currentThoughtBoost > 1) myReq = requestAnimationFrame(animateThoughtBoost)\r\n  }\r\n\r\n  const thoughtBoostStrengthBought = derived(upgrades, $upgrades => $upgrades.thoughtBoostStrength.bought)\r\n  // handle currentThoughtBoost being updated automatically when its strength is changed\r\n  $: if ($thoughtBoostStrengthBought && get(currentThoughtBoostTime) > 0) currentThoughtBoost.set(get(thoughtBoostMax))\r\n\r\n  onMount(() => {\r\n    myReq = requestAnimationFrame(animateThoughtBoost)\r\n  })\r\n</script>\r\n\r\n<Window title=\"Cogito Ergo Sum\" themeColor1=\"rgb(129, 0, 204)\" themeColor2=\"rgb(182, 122, 255)\">\r\n  <!-- <div style=\"position: absolute; right: 8px; top: 8px;\">\r\n    <input type=\"checkbox\" name=\"buyMax\" bind:checked={buyMaxUpgrades} />\r\n    <label for=\"buyMax\">Buy Max</label>\r\n  </div> -->\r\n\r\n  <div>\r\n    <span class=\"resourceDisplay\">\r\n      You <span style=\"color:var(--themeColor2); font-weight:bold\">thought</span>\r\n      {formatNumber($resource.thoughts, 2)} times<br />\r\n    </span>\r\n    <span>\r\n      {#if $unlocked.thinkPassively || LORCA_OVERRIDE}\r\n        <span class:green={$currentThoughtBoost > 1}>{formatNumber($thoughtsPerSec, 2)}/s</span>\r\n        {#if $currentThoughtBoost > 1}\r\n          - {formatNumber($currentThoughtBoost, 2)}x\r\n          {#if $currentThoughtBoostTime >= 100}\r\n            for {formatTime($currentThoughtBoostTime / 1000, 1)}\r\n            {#if $unlocked.thoughtBoostStack}\r\n              - {thoughtBoostCurrentStacks}/{$thoughtBoostMaxStacks} Stack{$thoughtBoostMaxStacks > 1 ? 's' : ''}\r\n            {/if}\r\n          {/if}\r\n        {/if}\r\n      {/if}\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"flexRowContainer\">\r\n    {#if $unlocked.thoughtBoost}\r\n      <button on:click={handleThink}>\r\n        Thought Boost <span class=\"iconify\" data-icon=\"icon-park-outline:brain\" /><br />\r\n        x{formatNumber($thoughtBoostMax, 2)} thoughts/s for {formatTime($thoughtBoostDuration / 1000)}\r\n      </button>\r\n    {:else}\r\n      <button on:click={handleThink}>\r\n        Think <br />\r\n        (+1 thought)\r\n      </button>\r\n    {/if}\r\n  </div>\r\n\r\n  <UnlockDrawer unlocks={unlocks.thoughts} folderName=\"Swordsman_Skill_Icons_Pack\" />\r\n\r\n  <div class=\"flexRowContainer\">\r\n    <div class=\"gridColumn\">\r\n      <UpgradeButton\r\n        upgradeName=\"thoughtAcceleration\"\r\n        {buyMaxUpgrades}\r\n        btnUnlocked={$unlocked.thinkFaster}\r\n        tooltipText={`+${formatNumber(thoughtAccelDisplay, 2)} thought${thoughtAccelDisplay > 1 ? 's' : ''}/s`}\r\n      >\r\n        Thought Acceleration\r\n      </UpgradeButton>\r\n\r\n      <UpgradeButton\r\n        upgradeName=\"thoughtJerk\"\r\n        {buyMaxUpgrades}\r\n        btnUnlocked={$unlocked.thoughtJerk}\r\n        tooltipText={`+${formatNumber(thoughtJerkDisplay, 2)} to Effect of Thought Acceleration `}\r\n      >\r\n        Thought Jerk\r\n      </UpgradeButton>\r\n\r\n      <UpgradeButton\r\n        upgradeName=\"thoughtBoostStrength\"\r\n        {buyMaxUpgrades}\r\n        btnUnlocked={$unlocked.thoughtBoost}\r\n        tooltipText=\"Scales ^1.5 with #upgrades\"\r\n      >\r\n        Increase the strength of Thought Boosts\r\n      </UpgradeButton>\r\n\r\n      <UpgradeButton\r\n        upgradeName=\"thoughtBoostDuration\"\r\n        {buyMaxUpgrades}\r\n        btnUnlocked={$unlocked.thoughtBoost}\r\n        tooltipText=\"Duration +5s\"\r\n      >\r\n        Increase the duration of Thought Boosts\r\n      </UpgradeButton>\r\n\r\n      <UpgradeButton\r\n        upgradeName=\"thoughtBoostStack\"\r\n        {buyMaxUpgrades}\r\n        btnUnlocked={$unlocked.thoughtBoostStack}\r\n        tooltipText=\"Max stacks +1\"\r\n      >\r\n        Increase the maximum stack size of Thought Boosts <br />\r\n      </UpgradeButton>\r\n    </div>\r\n\r\n    <div class=\"gridColumn\" style=\"height:332px; width: 100%\">\r\n      <EffectComponent\r\n        title={$upgrades.cheeseThoughtMult.bought > 0 || $unlocked.cheeseQueueLengthBoost ? 'Effects' : '???'}\r\n      >\r\n        <Effect factor={$currentThoughtBoost} unlocked={$unlocked.cheeseBoost}>\r\n          {unlocks.cheese.find(v => v.name === UnlockName.CHEESE_BOOST)?.description}\r\n        </Effect>\r\n      </EffectComponent>\r\n    </div>\r\n  </div>\r\n</Window>\r\n\r\n<style>\r\n  .green {\r\n    color: rgb(0, 216, 0);\r\n    font-weight: bold;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { onMount } from 'svelte'\r\n\r\n  let container: HTMLElement\r\n  let label: HTMLElement\r\n\r\n  /* function handleResize(){\r\n    label.style.width = window.getComputedStyle(container).getPropertyValue('width')\r\n    console.log(\"resize\")\r\n  } */\r\n  onMount(() => {\r\n    // let the barLabel \"inherit\" the width from the container\r\n    label.style.width = window.getComputedStyle(container).getPropertyValue('width')\r\n  })\r\n</script>\r\n\r\n<div>\r\n  <div id=\"outerContainer\" bind:this={container}>\r\n    <div id=\"innerBar\">\r\n      <span id=\"barLabel\" bind:this={label}>\r\n        <slot />\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  #outerContainer {\r\n    background: var(--barBgColor, var(--Gray800));\r\n    width: var(--width, 4rem);\r\n    height: var(--height);\r\n    overflow: hidden;\r\n    position: relative;\r\n    border-radius: 0.2rem;\r\n  }\r\n  #innerBar {\r\n    background-color: var(--barColor, var(--secondary));\r\n    width: var(--progress, 0);\r\n    /*transition: width .25s ease-in-out;*/\r\n    /* transition: linear 0.2s; */\r\n    height: inherit;\r\n    border-radius: inherit;\r\n  }\r\n  #barLabel {\r\n    display: flex;\r\n    height: inherit;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  export let min = 0\r\n  export let max: number\r\n  export let value: number\r\n  export let onChange\r\n</script>\r\n\r\n<input\r\n  class=\"draggable\"\r\n  type=\"range\"\r\n  {min}\r\n  {max}\r\n  bind:value\r\n  on:change={() => {\r\n    if (value > 0) onChange()\r\n  }}\r\n/>\r\n\r\n<style>\r\n  * {\r\n    --thumb-width: 12px;\r\n    --thumb-height: 24px;\r\n    --thumb-border-radius: 2px;\r\n  }\r\n  input[type='range'] {\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: transparent;\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n  }\r\n  input[type='range']:focus {\r\n    outline: none;\r\n  }\r\n  input[type='range']::-webkit-slider-runnable-track {\r\n    background: var(--Gray800);\r\n    border: 0;\r\n    border-radius: 2.5px;\r\n    width: 100%;\r\n    height: 8px;\r\n    cursor: pointer;\r\n  }\r\n  input[type='range']::-webkit-slider-thumb {\r\n    margin-top: 0px;\r\n    width: var(--thumb-width);\r\n    height: var(--thumb-height);\r\n    background: yellow;\r\n    border: 0;\r\n    border-radius: var(--thumb-border-radius);\r\n    cursor: pointer;\r\n    -webkit-appearance: none;\r\n  }\r\n  input[type='range']:focus::-webkit-slider-runnable-track {\r\n    background: var(--Gray800);\r\n  }\r\n  input[type='range']::-moz-range-track {\r\n    background: var(--Gray800);\r\n    border: 0;\r\n    border-radius: 3px;\r\n    width: 100%;\r\n    height: 8px;\r\n    cursor: pointer;\r\n  }\r\n  input[type='range']::-moz-range-thumb {\r\n    width: var(--thumb-width);\r\n    height: var(--thumb-height);\r\n    background: yellow;\r\n    border: 0;\r\n    border-radius: var(--thumb-border-radius);\r\n    cursor: pointer;\r\n  }\r\n  input[type='range']::-ms-track {\r\n    background: transparent;\r\n    border-color: transparent;\r\n    color: transparent;\r\n    width: 100%;\r\n    height: 8px;\r\n    cursor: pointer;\r\n  }\r\n  input[type='range']::-ms-fill-lower {\r\n    background: var(--Gray800);\r\n    border: 0;\r\n    border-radius: 5px;\r\n  }\r\n  input[type='range']::-ms-fill-upper {\r\n    background: var(--Gray800);\r\n    border: 0;\r\n    border-radius: 5px;\r\n  }\r\n  input[type='range']::-ms-thumb {\r\n    width: var(--thumb-width);\r\n    height: var(--thumb-height);\r\n    background: yellow;\r\n    border: 0;\r\n    border-radius: var(--thumb-border-radius);\r\n    cursor: pointer;\r\n    margin-top: 0px;\r\n    /*Needed to keep the Edge thumb centred*/\r\n  }\r\n  input[type='range']:focus::-ms-fill-lower {\r\n    background: var(--Gray800);\r\n  }\r\n  input[type='range']:focus::-ms-fill-upper {\r\n    background: var(--Gray800);\r\n  }\r\n  /*TODO: Use one of the selectors from https://stackoverflow.com/a/20541859/7077589 and figure out\r\nhow to remove the virtical space around the range input in IE*/\r\n  @supports (-ms-ime-align: auto) {\r\n    /* Pre-Chromium Edge only styles, selector taken from hhttps://stackoverflow.com/a/32202953/7077589 */\r\n    input[type='range'] {\r\n      margin: 0;\r\n      /*Edge starts the margin from the thumb, not the track as other browsers do*/\r\n    }\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\n  import { type CheeseFactoryMode, cheeseModeStats } from '@store'\n\n  export let data: CheeseFactoryMode\n  export let top = 0\n  export let left = 0\n  const style = `top: ${top}px; left: ${left - 75}px;`\n\n  const cheeseModeDescription: Record<CheeseFactoryMode, string> = {\n    meticulous: '\"Quality over quantity\"',\n    nominal: 'Everything is working nominally.',\n    warpSpeed: 'Trains the hand speed of your workers.',\n  }\n</script>\n\n<div class=\"tooltip-arrow-up\" id=\"cheeseFactoryProtocolInfo\" {style}>\n  <span style=\"text-decoration: underline; font-weight: bold; color: yellow; margin-bottom: 0.25rem\">Cheesy Info</span>\n  <br />\n  <span style=\"display:flex;flex-direction:column;gap:0.25rem;\">\n    <span>{cheeseModeDescription[data]}</span>\n    <span class=\"effect\">\n      Relative gain/duration/cost:\n      {cheeseModeStats[data].yield}x / {cheeseModeStats[data].duration}x / {cheeseModeStats[data].cost}x\n    </span>\n    {#if data === 'warpSpeed'}\n      <span class=\"effect\"> In this mode you are unable to produce byprodcuts. </span>\n    {/if}\n  </span>\n</div>\n\n<style>\n  #cheeseFactoryProtocolInfo {\n    width: 320px;\n    text-align: left;\n  }\n  .effect::before {\n    content: '⯁ ';\n    color: yellow;\n  }\n</style>\n","<script lang=\"ts\">\n  import Window from './window-model/Window.svelte'\n  import EffectComponent from '../EffectComponent.svelte'\n  import Effect from '../Effect.svelte'\n  import { formatNumber, formatTime, formatWhole } from '@gamelogic/utils'\n  import { fade, slide } from 'svelte/transition'\n  import ProgBar from '../misc/ProgBar.svelte'\n  import UpgradeButton from '../UpgradeButton.svelte'\n  import InputRange from '../misc/InputRange.svelte'\n  import {\n    LORCA_OVERRIDE,\n    resource,\n    upgrades,\n    unlocked,\n    currentCheeseQueue,\n    cheeseQueueOverclockLvl,\n    cheeseFactoryMode,\n    cheeseQueueTotalCycles,\n    type CheeseFactoryMode,\n    currentThoughtBoost,\n    cheeseModeFactor,\n    cheeseCycleDuration,\n    cheeseCycleBatchSize,\n    cheeseCycleCost,\n    cheeseQueueCostDivideBy,\n    cheeseCycleBase,\n    cheeseQueueActive,\n    cheeseQueueOverclockSpeedMult,\n    maxCheeseQueue,\n    cheeseYieldDeltaDuration,\n    cheeseQueueLengthBoostFactor,\n    cheeseCycleAcceleratorFactor,\n    cheeseThoughtMult,\n    cheeseCyclesThoughtMult,\n    unlocks,\n    UnlockName,\n    mcCycleDurationBoostFactor,\n    moldyCheeseChance,\n    mcByproductAmount,\n  } from '@store'\n  import UnlockDrawer from '../UnlockDrawer.svelte'\n  import { tooltip } from '../tooltips/tooltip'\n  import CheeseFactoryProtocol from '../tooltips/CheeseFactoryProtocol.svelte'\n  import { onMount } from 'svelte'\n\n  const buyMaxUpgrades = false\n  // extracting the stores from the cheeseCycleBase object\n  const cheeseCycleBaseYield = cheeseCycleBase.yield\n  const cheeseCycleBaseDuration = cheeseCycleBase.duration\n  const cheeseCycleBaseCost = cheeseCycleBase.cost\n\n  // 1 if it's active, 0 when not\n  // $: cheeseQueueActive = cheeseCycleBase.state === 'running'\n  $: cheesePerSecFromQueue = +$cheeseQueueActive * 1000 * ($cheeseCycleBatchSize / $cheeseCycleDuration)\n\n  let cheeseBarProgress = 0\n  let lastTime: number | null = null\n\n  onMount(() => {\n    if ($cheeseQueueActive) requestAnimationFrame(animateCheeseBar)\n  })\n\n  function resetCheeseBar(): void {\n    cheeseBarProgress = 0\n  }\n  /**\n   * Triggered when manually starting the cheese generation (with button or input range)\n   */\n  function handleCheeseGenerationInit(): void {\n    if ($resource.thoughts < $cheeseCycleCost || $cheeseQueueActive) return\n    $resource.thoughts -= $cheeseCycleCost\n    if ($currentCheeseQueue >= 1) $currentCheeseQueue--\n    cheeseQueueActive.set(true)\n\n    lastTime = null\n\n    /* TODO: insert here logic for if cheeseCycleBaseDuration exceeds a certain speed, then no animation, just a static bar with\n    statistical averages for calculations */\n    requestAnimationFrame(animateCheeseBar)\n  }\n\n  function animateCheeseBar(currentTime: number): void {\n    if (lastTime === null) lastTime = currentTime\n    const deltaTimeMillis = Math.max(Math.min(currentTime - lastTime), 0)\n    lastTime = currentTime\n    // the value of cheeseBarProgress is fed to CSS\n    cheeseBarProgress += deltaTimeMillis\n    while (cheeseBarProgress >= $cheeseCycleDuration) {\n      handleCheeseGeneration()\n      // console.log('Completed a cycle with ' + $cheeseCycleDuration, cheeseBarProgress)\n      cheeseBarProgress -= $cheeseCycleDuration\n      if (cheeseBarProgress < $cheeseCycleDuration) cheeseBarProgress = 0\n    }\n    if ($cheeseQueueActive) requestAnimationFrame(animateCheeseBar)\n  }\n\n  /**\n   * This function shall be called whenever the cheese bar completes a cycle.\n   */\n  function handleCheeseGeneration(): void {\n    $resource.cheese += $cheeseCycleBatchSize\n\n    if (!$currentCheeseQueue) {\n      // 'initial' better than 'paused', because the animation might've already started a small bit\n      cheeseQueueActive.set(false)\n      return\n    }\n    if ($resource.thoughts < $cheeseCycleCost) {\n      cheeseQueueActive.set(false)\n      return\n    }\n\n    $resource.thoughts -= $cheeseCycleCost\n    if ($currentCheeseQueue >= 1) $currentCheeseQueue--\n    $cheeseQueueTotalCycles++\n\n    // HANDLEMOLDY CHEESE\n    if ($unlocked.moldyCheeseByproduct) {\n      if (Math.random() < $moldyCheeseChance) {\n        $resource.moldyCheese += $mcByproductAmount\n      }\n    }\n  }\n</script>\n\n<Window title=\"Switzerland Simulator\" themeColor1=\"rgb(168, 143, 2)\" themeColor2=\"rgb(244, 255, 33)\">\n  <div>\n    <span class=\"resourceDisplay\"\n      >You have {formatNumber($resource.cheese, 2)} <span class=\"colorText\" style=\"font-weight:bold\">cheese</span>\n      <br />\n    </span>\n    ~ {formatNumber(cheesePerSecFromQueue, 2)}/s\n  </div>\n\n  <div style=\"display:flex; flex-direction:column;\">\n    <div class=\"flexRowContainer\">\n      <button style=\"width:170px;\" on:click={handleCheeseGenerationInit} disabled={$cheeseQueueActive}>\n        Make cheese <br />\n        {formatNumber($cheeseCycleCost, 2)} thoughts\n      </button>\n\n      <div class=\"gridColumn\" style=\"width: 100%\">\n        <div id=\"cheeseBar\">\n          <ProgBar\n            --width=\"100%\"\n            --height=\"24px\"\n            --barColor=\"yellow\"\n            --progress=\"{(100 * cheeseBarProgress) / $cheeseCycleDuration}%\"\n          />\n        </div>\n\n        <div style=\"width:100%; height: 16px; margin-top:4px;\">\n          {#if $unlocked.cheeseQueue}\n            <div\n              transition:fade={{ duration: 1000 }}\n              style=\"display:grid; grid-template-columns: auto 1fr auto; gap: 8px\"\n            >\n              <span class=\"flexCenter\">Cheese Queue:</span>\n\n              <InputRange\n                min={0}\n                max={$maxCheeseQueue}\n                bind:value={$currentCheeseQueue}\n                onChange={handleCheeseGenerationInit}\n              />\n\n              <span class=\"flexCenter\" style=\"width: 40px; background: var(--Gray800);\">{$currentCheeseQueue}</span>\n            </div>\n          {:else}\n            <div style=\"text-align: center;\">???</div>\n          {/if}\n        </div>\n      </div>\n    </div>\n\n    <p style=\"margin-bottom: 0px; margin-top: 8px; height: 1.625rem;\">\n      Industrious swiss workers are producing\n      {formatNumber($cheeseCycleBatchSize, 2)}<!--\n    -->{#if $cheeseModeFactor.yield !== 1}\n        <span style=\"color:orange;\">[{$cheeseModeFactor.yield}x]</span>\n      {/if} cheese every\n      {formatTime($cheeseCycleDuration / 1000)}<!--\n      -->{#if $cheeseModeFactor.duration !== 1}\n        <span style=\"color:orange;\">[{$cheeseModeFactor.duration}x]</span>\n      {/if}\n      <span transition:fade={{ duration: 1000 }}>\n        while consuming {formatNumber($cheeseCycleCost, 2)}<!--\n        -->{#if $cheeseModeFactor.cost !== 1}\n          <span style=\"color:orange;\">[{$cheeseModeFactor.cost}x]</span>\n        {/if}\n        thoughts. (~{formatNumber(($cheeseCycleCost / $cheeseCycleDuration) * 1000, 2)}\n        thoughts/s)\n      </span>\n    </p>\n\n    <span style=\"margin-top: .25rem\" transition:fade={{ duration: 500 }}>\n      {#if $unlocked.cheeseCycleAccelerator}\n        Total Cheese Cycles: {formatWhole($cheeseQueueTotalCycles)}\n      {:else}\n        ...???\n      {/if}\n    </span>\n  </div>\n\n  {#if $unlocked.cheeseQueueOverclocking || $LORCA_OVERRIDE}\n    <div\n      class=\"flexRowContainer\"\n      transition:slide={{ duration: 1000 }}\n      style=\"align-items:flex-end; margin-top: -8px; height: 71px\"\n    >\n      <div style=\"display:flex; flex-direction:row; gap: 2px;\">\n        <div\n          style=\"display:flex; flex-direction:column; background-color: var(--Gray800)\"\n          class=\"button-border\"\n          use:tooltip={{\n            data: 'Increases the speed of a cheese cycle. <br> Every level increases SPEED by 5%, but doubles the COST. <br> (multiplicative)',\n          }}\n        >\n          <div\n            style=\"height:1.25rem; border-bottom: 2px solid rgba(255, 255, 255, 0.4); display:flex; align-items: center; justify-content: center; gap: 0.5rem\"\n          >\n            <span style=\"font-size:.875rem; font-weight: bold\"> Overclocking </span>\n            <span style=\"font-size:.875rem;\">LV{$cheeseQueueOverclockLvl}</span>\n          </div>\n\n          <div style=\"height:2.5rem; display:flex; flex-direction:row; \">\n            <div\n              style=\"width: 4rem; display:flex; flex-direction:column; justify-content:center; align-items: center; gap: 0.125rem \"\n            >\n              <span\n                style=\"font-weight: bold; color:white; background: rgb(10, 125, 16); padding-left:0.25rem; padding-right: 0.25rem; border-radius: 8px; border: 1px solid rgba(255,255,255,0.4); \"\n              >\n                SPEED\n              </span>\n              <span> {formatNumber($cheeseQueueOverclockSpeedMult, 2)} Hz</span>\n            </div>\n            <div\n              style=\"width: 10rem; display:flex; flex-direction:column;  justify-content:center; align-items: center; gap: 0.125rem; border-left: 2px solid rgba(255, 255, 255, 0.4)\"\n            >\n              <span\n                style=\"font-weight: bold; color:white; background: rgb(115, 0, 2); padding-left:0.25rem; padding-right: 0.25rem; border-radius: 8px; border: 1px solid rgba(255,255,255,0.4); \"\n              >\n                COST\n              </span>\n              <span> {formatNumber($cheeseCycleBaseCost, 2)} thoughts/cycle</span>\n            </div>\n          </div>\n        </div>\n        <div style=\"width: 100%; display:flex; flex-direction:column; justify-content: space-between\">\n          <button style=\"height: 2rem; width: 2rem\" on:click={() => $cheeseQueueOverclockLvl++}>\n            <img\n              alt=\"+1 level\"\n              src=\"assets/chevron-arrow-down.png\"\n              style=\"width: 50%; transform: rotate(180deg); filter: invert(100%); \"\n            />\n          </button>\n          <button style=\"height: 2rem; width: 2rem\" on:click={() => $cheeseQueueOverclockLvl--}>\n            <img alt=\"-1 level\" src=\"assets/chevron-arrow-down.png\" style=\"width: 50%; filter: invert(100%); \" />\n          </button>\n        </div>\n      </div>\n\n      {#if $unlocked.cheeseModes || $LORCA_OVERRIDE}\n        <div transition:slide={{ duration: 1000 }}>\n          <fieldset on:change={resetCheeseBar}>\n            <legend>Cheese Factory Protocol</legend>\n\n            <label use:tooltip={{ data: 'meticulous', Component: CheeseFactoryProtocol, anchor: 'parentElement' }}>\n              <input type=\"radio\" name=\"cheeseFactoryMode\" bind:group={$cheeseFactoryMode} value=\"meticulous\" />\n              meticulous\n            </label>\n            <label use:tooltip={{ data: 'nominal', Component: CheeseFactoryProtocol, anchor: 'parentElement' }}>\n              <input type=\"radio\" name=\"cheeseFactoryMode\" bind:group={$cheeseFactoryMode} value=\"nominal\" />\n              nominal\n            </label>\n            <label use:tooltip={{ data: 'warpSpeed', Component: CheeseFactoryProtocol, anchor: 'parentElement' }}>\n              <input type=\"radio\" name=\"cheeseFactoryMode\" bind:group={$cheeseFactoryMode} value=\"warpSpeed\" />\n              warp speed\n            </label>\n          </fieldset>\n        </div>\n      {/if}\n    </div>\n  {/if}\n\n  <UnlockDrawer unlocks={unlocks.cheese} folderName=\"Free 50 Aeromancer Skills\" />\n\n  <div class=\"flexRowContainer\">\n    <div class=\"gridColumn\">\n      <UpgradeButton\n        upgradeName=\"cheeseYield\"\n        {buyMaxUpgrades}\n        tooltipText={`+${formatNumber(\n          (($upgrades.cheeseYield.bought + 1) * $cheeseCycleBatchSize) / $cheeseCycleBaseYield,\n          2\n        )} \n        cheese per cycle <br>\n        +${formatTime((cheeseYieldDeltaDuration * $cheeseCycleDuration) / $cheeseCycleBaseDuration / 1000)} \n        cycle duration <br>(without scaling: +0.5s cycle duration)`}\n      >\n        Your workers create more cheese but also take longer\n      </UpgradeButton>\n\n      <UpgradeButton\n        upgradeName=\"cheeseQueueLength\"\n        {buyMaxUpgrades}\n        btnUnlocked={$unlocked.cheeseQueue}\n        tooltipText={`+${5} capacity <br> Currently: ${$maxCheeseQueue}`}\n      >\n        <span>Lengthen the <span style=\"color:yellow; font-weight: bold\">Cheese Queue</span></span>\n      </UpgradeButton>\n\n      <UpgradeButton\n        upgradeName=\"cheeseThoughtMult\"\n        {buyMaxUpgrades}\n        btnUnlocked={$unlocked.cheeseQueue}\n        tooltipText={`Currently: ${\n          $upgrades.cheeseThoughtMult.bought * $upgrades.cheeseThoughtMult.bought\n        }x <br> Scales ^2 with #upgrades.`}\n      >\n        {#if $upgrades.cheeseThoughtMult.bought === 0}\n          Cheese increases thought gain\n        {:else}\n          Increase effect of cheese boosting thought gain\n        {/if}\n      </UpgradeButton>\n\n      <UpgradeButton\n        upgradeName=\"cheeseQueueOverclockingCost\"\n        {buyMaxUpgrades}\n        btnUnlocked={$unlocked.cheeseQueueCostDivide}\n        tooltipText={`Current Divisor: ${formatNumber($cheeseQueueCostDivideBy, 2)}`}\n      >\n        Divide the cost requirement of Overclocking <br />\n      </UpgradeButton>\n    </div>\n\n    <div class=\"gridColumn\" style=\"height:264px; width: 100%\">\n      <EffectComponent\n        title={$upgrades.cheeseThoughtMult.bought > 0 || $unlocked.cheeseQueueLengthBoost ? 'Effects' : '???'}\n      >\n        <Effect\n          factor={$cheeseThoughtMult}\n          unlocked={$upgrades.cheeseThoughtMult.bought > 0}\n          tooltipText={`Scaling: log(cheese) &times; ${\n            $upgrades.cheeseThoughtMult.bought * $upgrades.cheeseThoughtMult.bought\n          }`}\n        >\n          Cheese increases thoughts/s\n        </Effect>\n\n        <Effect\n          factor={$cheeseQueueLengthBoostFactor}\n          unlocked={$unlocked.cheeseQueueLengthBoost}\n          tooltipText=\"Scaling: capacity^2\"\n        >\n          {unlocks.cheese.find(v => v.name === UnlockName.CHEESE_QUEUE_LENGTH_BOOST)?.description}\n        </Effect>\n\n        <Effect\n          factor={$cheeseCycleAcceleratorFactor}\n          unlocked={$unlocked.cheeseCycleAccelerator}\n          tooltipText=\"Scaling: log(cycles)\"\n        >\n          {unlocks.cheese.find(v => v.name === UnlockName.CHEESE_CYCLE_ACCELERATOR)?.description}\n        </Effect>\n\n        <Effect\n          factor={$cheeseCyclesThoughtMult}\n          unlocked={$unlocked.cheeseCyclesBoostThoughts}\n          tooltipText=\"Scaling: cycles^1.5\"\n        >\n          {unlocks.cheese.find(v => v.name === UnlockName.CHEESE_CYCLES_BOOST_THOUGHTS)?.description}\n        </Effect>\n\n        <Effect\n          factor={$mcCycleDurationBoostFactor}\n          unlocked={$unlocked.moldyCheeseCycleDurationBoost}\n          tooltipText={`Scales ^${1.5} with relative duration.`}\n        >\n          MC byproduct gain is boosted by the rel. duration of the cheese cycle\n        </Effect>\n      </EffectComponent>\n    </div>\n  </div>\n</Window>\n\n<style>\n  .colorText {\n    color: var(--themeColor2);\n  }\n  #cheeseBar {\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import Window from './window-model/Window.svelte'\n  import { formatNumber, formatWhole } from '@gamelogic/utils'\n  import UpgradeButton from '../UpgradeButton.svelte'\n  import {\n    LORCA_OVERRIDE,\n    resource,\n    unlocked,\n    cheeseCycleDuration,\n    mcHalfLifeSeconds,\n    moldyCheeseChance,\n    cheeseMonsterCapacity,\n    cheeseMonsterSpawnrate,\n    unlocks,\n    mcByproductAmount,\n    mcManualConversionAmount,\n    mcConversionExponent,\n    mcHalflifeBoostFactor,\n    mcConversionCooldownMS,\n  } from '@store'\n  import UnlockDrawer from '../UnlockDrawer.svelte'\n  import EffectComponent from '../EffectComponent.svelte'\n  import Effect from '../Effect.svelte'\n\n  const buyMaxUpgrades = false\n\n  let conversionOnCD = false\n\n  let cdTimer: number\n  let intervalId: number\n  function handleMoldyCheeseGenerationButton(): void {\n    if (conversionOnCD) return\n    conversionOnCD = true\n    cdTimer = $mcConversionCooldownMS\n    $resource.moldyCheese += $mcManualConversionAmount\n    $resource.cheese = 0\n\n    let lastTime = Date.now()\n    clearInterval(intervalId)\n    intervalId = setInterval(() => {\n      const currentTime = Date.now()\n      const dt = Math.max(Math.min(currentTime - lastTime, 1000), 0)\n      lastTime = currentTime\n      cdTimer -= dt\n      if (cdTimer <= 0) {\n        conversionOnCD = false\n        clearInterval(intervalId)\n      }\n    }, 100)\n  }\n</script>\n\n<Window title=\"Moldy Cheese\" themeColor1=\"rgb(75, 121, 0)\" themeColor2=\"rgb(136, 255, 0)\">\n  <div style=\"display: flex; flex-direction: column; gap: 8px;\">\n    <span class=\"resourceDisplay\">\n      You have {formatNumber($resource.moldyCheese, 2)} <strong class=\"colorText\">moldy cheese</strong>\n      <br />\n    </span>\n    <span>\n      Half-life: {formatWhole($mcHalfLifeSeconds)}s (-{formatNumber(\n        100 - 100 * (1 - Math.log(2) / $mcHalfLifeSeconds),\n        2\n      )}%/s) <br />\n      (Moldy cheese is an unstable isotope of cheese and can decay) <br />\n      {#if $unlocked.moldyCheeseByproduct || $LORCA_OVERRIDE}\n        You gain {formatNumber($mcByproductAmount, 2)} moldy cheese\n        {#if $moldyCheeseChance !== 1} with a {formatWhole($moldyCheeseChance * 100)}% chance {/if}\n        whenever a cheese cycle completes\n        <br />\n        Estimated rate: {formatNumber(($mcByproductAmount / ($cheeseCycleDuration / 1000)) * $moldyCheeseChance, 2)} moldy\n        cheese/s\n      {:else}\n        ...???\n        <br />\n        ...???\n      {/if}\n    </span>\n  </div>\n\n  <button style=\"width: 250px; \" on:click={handleMoldyCheeseGenerationButton} disabled={conversionOnCD}>\n    <strong style=\"color:yellow\">Cheese Sacrifice</strong>\n    <br />\n    Convert all cheese into<br />\n    {formatNumber($mcManualConversionAmount, 2)} moldy cheese\n    <br />\n    <span> Cooldown: {formatWhole($mcConversionCooldownMS / 1000)}s </span>\n    {#if conversionOnCD}\n      <span>({formatNumber(cdTimer / 1000, 1)}s)</span>\n    {/if}\n  </button>\n\n  <UnlockDrawer unlocks={unlocks.moldyCheese} folderName=\"Free Alchemical Ingredient Icons Pack\" />\n\n  <div class=\"flexRowContainer\">\n    <div class=\"gridColumn\">\n      <UpgradeButton\n        upgradeName=\"moldyCheeseConversionExponent\"\n        {buyMaxUpgrades}\n        tooltipText={`Currently: cheese^${formatNumber($mcConversionExponent, 4)}`}\n      >\n        Improve the conversion function <br />\n      </UpgradeButton>\n\n      <UpgradeButton\n        upgradeName=\"moldyCheeseHalfLife\"\n        {buyMaxUpgrades}\n        tooltipText={`+10s half-life <br> Currently: ${formatWhole($mcHalfLifeSeconds)}s`}\n      >\n        Increase MC half-life <br />\n      </UpgradeButton>\n\n      <UpgradeButton\n        upgradeName=\"moldyCheeseChance\"\n        {buyMaxUpgrades}\n        btnUnlocked={$unlocked.moldyCheeseByproduct}\n        tooltipText={`+10% chance (additive) <br> Currently: ${formatNumber($moldyCheeseChance * 100, 1)}%`}\n      >\n        Increase MC byproduct chance <br />\n      </UpgradeButton>\n\n      <UpgradeButton\n        upgradeName=\"cheeseMonsterSpawnrate\"\n        {buyMaxUpgrades}\n        btnUnlocked={$unlocked.cheeseyard}\n        tooltipText={$cheeseMonsterSpawnrate < 1\n          ? `+${formatWhole(20)} spawns/min <br> Currently: ${formatWhole($cheeseMonsterSpawnrate * 60)} spawns/min`\n          : `+${formatNumber(20 / 60, 2)} spawns/s <br> Currently: ${formatNumber(\n              $cheeseMonsterSpawnrate,\n              2\n            )} spawns/s`}\n      >\n        Improve the spawn rate in the cheeseyard <br />\n      </UpgradeButton>\n\n      <UpgradeButton\n        upgradeName=\"cheeseMonsterCapacity\"\n        {buyMaxUpgrades}\n        btnUnlocked={$unlocked.cheeseyard}\n        tooltipText={`+10 capacity <br> Currently: ${formatWhole($cheeseMonsterCapacity)}`}\n      >\n        Expand the Cheeseyard <br />\n      </UpgradeButton>\n    </div>\n\n    <div class=\"gridColumn\" style=\"height:332px; width: 100%\">\n      <EffectComponent>\n        <Effect\n          factor={$mcHalflifeBoostFactor}\n          unlocked={$unlocked.moldyCheeseHalflifeBoost}\n          tooltipText={`Scales ^${3} with half life.`}\n        >\n          Cheese gain is additionally boosted by MC half-life\n        </Effect>\n      </EffectComponent>\n    </div>\n  </div>\n</Window>\n\n<style>\n  * {\n    --maxedColor: rgb(60, 255, 0);\n  }\n  .colorText {\n    color: rgb(60, 255, 0);\n  }\n</style>\n","<script lang=\"ts\">\n  import { formatNumber } from '@gamelogic/utils'\n  import { type BrainMode, cheeseMonsterDeathRateStats, cheeseMonsterBrainModeResourceFactors } from '@store'\n\n  export let data: BrainMode\n  export let top = 0\n  export let left = 0\n  const style = `top: ${top}px; left: ${left - 75}px;`\n\n  const brainModeDescription: Record<BrainMode, string> = {\n    peaceful: 'Inner peace lets your monsters supress their destructive urges.',\n    neutral: 'Occasionally some monsters may start a fight to the death if they feel like it.',\n    destructive: 'Monsters attack each other on sight, ripping out their brains.',\n  }\n</script>\n\n<div class=\"tooltip-arrow-up\" id=\"brainWaveInfo\" {style}>\n  <span style=\"text-decoration: underline; font-weight: bold; color: rgb(255, 0, 98); margin-bottom: 0.25rem\">\n    Monster Info\n  </span>\n  <br />\n  <span style=\"display:flex;flex-direction:column;gap:0.25rem;\">\n    <span>{brainModeDescription[data]}</span>\n    <span class=\"effect\">\n      Death toll: {cheeseMonsterDeathRateStats[data] > 0\n        ? `${formatNumber(cheeseMonsterDeathRateStats[data], 2)}/s/monster`\n        : 'None'}\n    </span>\n    <span class=\"effect\">Relative resource generation: {cheeseMonsterBrainModeResourceFactors[data]}x</span>\n    <div\n      style=\"opacity:var(--medium-emphasis); font-style: oblique; text-align: right; padding-left: 20px; margin-top: 0.25rem \"\n    >\n      The less preoccupied the monsters are with killing each other, the more they can ponder and produce stuff.\n    </div>\n  </span>\n</div>\n\n<style>\n  #brainWaveInfo {\n    width: 300px;\n    text-align: left;\n  }\n  .effect::before {\n    content: '⯁ ';\n    color: rgb(255, 0, 98);\n  }\n</style>\n","<script lang=\"ts\">\n  import Window from './window-model/Window.svelte'\n  import { formatNumber, formatWhole } from '@gamelogic/utils'\n  import { tooltip } from '../tooltips/tooltip'\n  import UpgradeButton from '../UpgradeButton.svelte'\n  import {\n    unlocks,\n    UnlockName,\n    monsterThoughtMult,\n    totalMonsterDeathsLootBoost,\n    monsterThoughtFactor,\n    cheeseMonsterSpawnrate,\n    cheeseMonsterDeathrate,\n    cheeseMonsterCapacity,\n    cheeseMonsterDropRate,\n    cheeseMonsterLootAmount,\n    monsterMoldyCheeseFactor,\n    monsterMoldyCheeseMult,\n    cheeseMonsterMassacreMultiplier,\n    cheeseMonsterDeathsPerSec,\n    cheeseMonsterCollectiveSentienceMultiplier,\n    brainMode,\n    totalCheeseMonsterDeaths,\n    approxCheeseBrainsPerSec,\n    resource,\n    upgrades,\n    unlocked,\n  } from '@store'\n  import { fade } from 'svelte/transition'\n  import UnlockDrawer from '../UnlockDrawer.svelte'\n  import EffectComponent from '../EffectComponent.svelte'\n  import Effect from '../Effect.svelte'\n  import MonsterBrainWaveController from '../tooltips/MonsterBrainWaveController.svelte'\n\n  const buyMaxUpgrades = false\n\n  $: controllerUnlocked = $unlocked.monsterBrainWaveController\n\n  function unlockBrainWaveController(): void {\n    if ($resource.cheeseMonster < 10) return\n    $unlocked.monsterBrainWaveController = true\n  }\n</script>\n\n<Window title=\"The Cheeseyard\" themeColor1=\"rgb(82, 0, 18)\" themeColor2=\"rgb(255, 0, 98)\">\n  <div style=\"display: flex; flex-direction: column; gap: 8px; width: var(--window-width);\">\n    <span class=\"resourceDisplay\">\n      Current population: {formatWhole($resource.cheeseMonster)}/{formatWhole($cheeseMonsterCapacity)}\n      <span style=\"font-weight: bold\" class=\"colorText\">cheese monsters</span> <br />\n    </span>\n    <span>\n      Spawn rate: {$cheeseMonsterSpawnrate < 1\n        ? `${formatWhole($cheeseMonsterSpawnrate * 60)}/min`\n        : `${formatNumber($cheeseMonsterSpawnrate, 2)}/s`}\n      <br />\n      {#if $totalCheeseMonsterDeaths > 0}\n        <span transition:fade={{ duration: 1000 }}>\n          Approx. deaths: {$cheeseMonsterDeathrate > 0 ? `${formatNumber($cheeseMonsterDeathsPerSec, 2)}/s` : 'None'}\n          <br />\n          Total deaths: {formatWhole($totalCheeseMonsterDeaths)}\n        </span>\n      {:else}\n        <span>\n          ...???\n          <br />\n          ...???\n        </span>\n      {/if}\n    </span>\n  </div>\n\n  <div class=\"flexRowContainer\" style=\"margin-top: -8px;\">\n    {#if !controllerUnlocked}\n      <button\n        style=\"height:max-content; width: 202.5px\"\n        on:click={unlockBrainWaveController}\n        disabled={$resource.cheeseMonster < 10}\n        use:tooltip={{ data: 'Are you sure?' }}\n      >\n        Activate the monster brain wave controller <br />\n        Requires 10 cheese monsters\n      </button>\n    {:else}\n      <div transition:fade={{ duration: 1000 }}>\n        <fieldset>\n          <legend>monster brain wave controller</legend>\n          <label\n            use:tooltip={{ data: 'peaceful', Component: MonsterBrainWaveController, anchor: 'parentElement' }}\n            class=\"bg-on-hover\"\n          >\n            <input type=\"radio\" name=\"brainMode\" bind:group={$brainMode} value={'peaceful'} />\n            peaceful\n          </label>\n          <label\n            use:tooltip={{ data: 'neutral', Component: MonsterBrainWaveController, anchor: 'parentElement' }}\n            class=\"bg-on-hover\"\n          >\n            <input type=\"radio\" name=\"brainMode\" bind:group={$brainMode} value={'neutral'} />\n            neutral\n          </label>\n          <label\n            use:tooltip={{ data: 'destructive', Component: MonsterBrainWaveController, anchor: 'parentElement' }}\n            class=\"bg-on-hover\"\n          >\n            <input type=\"radio\" name=\"brainMode\" bind:group={$brainMode} value={'destructive'} />\n            destructive\n          </label>\n        </fieldset>\n      </div>\n    {/if}\n    <div>\n      <span>Your current cheese monsters want to help you.</span>\n      <br />\n      <span>\n        ⮞ thoughts/s are boosted by {formatNumber($monsterThoughtMult, 2)}x\n      </span>\n      <br />\n      <span>\n        {#if $upgrades.cheeseMonsterMoldiness.bought > 0}\n          ⮞ MC gain is boosted by {formatNumber($monsterMoldyCheeseMult, 2)}x\n        {:else}\n          ⮞ ...???\n        {/if}\n      </span>\n    </div>\n  </div>\n\n  {#if controllerUnlocked}\n    <div transition:fade={{ duration: 1000 }}>\n      <span class=\"resourceDisplay\">\n        You have {formatNumber($resource.cheeseBrains, 2)}\n        <span style=\"color: rgb(250, 142, 0); font-weight:bold\">cheese brains</span>\n        <br />\n      </span>\n      <span>~ {formatNumber($approxCheeseBrainsPerSec, 2)}/s</span>\n    </div>\n\n    <UnlockDrawer unlocks={unlocks.cheeseBrains} folderName=\"Free Warlock Skills\" />\n\n    <div class=\"flexRowContainer\" transition:fade={{ duration: 1000 }}>\n      <div class=\"gridColumn\">\n        <UpgradeButton\n          upgradeName=\"cheeseMonsterDropRate\"\n          {buyMaxUpgrades}\n          tooltipText={`+5% drop rate (additive) <br> Currently: ${formatWhole($cheeseMonsterDropRate * 100)}%`}\n        >\n          Increase the drop rate of cheese monsters\n        </UpgradeButton>\n\n        <UpgradeButton\n          upgradeName=\"cheeseMonsterLoot\"\n          {buyMaxUpgrades}\n          tooltipText={`+1 brain/death <br> Currently: ${formatWhole($cheeseMonsterLootAmount)} cheese brains/death`}\n        >\n          Increase the loot obtained from cheese monster corpses\n        </UpgradeButton>\n\n        <UpgradeButton\n          upgradeName=\"cheeseMonsterSentience\"\n          {buyMaxUpgrades}\n          tooltipText={`+1x thoughts/s/monster <br> Currently: +${formatNumber(\n            $monsterThoughtFactor,\n            2\n          )}x thoughts/s/monster`}\n        >\n          Nurture the sentience of monsters\n        </UpgradeButton>\n\n        <UpgradeButton\n          btnUnlocked={$unlocked.cheeseyardMoldUpgrade}\n          upgradeName=\"cheeseMonsterMoldiness\"\n          {buyMaxUpgrades}\n          tooltipText={`+0.01x MC gain/monster <br> Currently: +${formatNumber(\n            $monsterMoldyCheeseFactor,\n            2\n          )}x MC gain/monster <br> (MC = moldy cheese)`}\n        >\n          Improve the moldiness of monsters\n        </UpgradeButton>\n      </div>\n\n      <div class=\"gridColumn\" style=\"height:264px; width: 100%\">\n        <EffectComponent>\n          <Effect\n            factor={$cheeseMonsterMassacreMultiplier}\n            unlocked={$unlocked.cheeseMonsterMassacre}\n            tooltipText={`Higher deaths/s are disproportionally rewarded. <br/> Scales ^1.3 with deaths/s.`}\n          >\n            {unlocks.cheeseBrains.find(v => v.name === UnlockName.CHEESE_MONSTER_MASSACRE)?.description}\n          </Effect>\n          <Effect\n            factor={$cheeseMonsterCollectiveSentienceMultiplier}\n            unlocked={$unlocked.cheeseMonsterCollectiveSentience}\n            tooltipText={`In bigger populations, a sort of global thinking <br/> emerges, giving an additional multiplier. <br/> Scales ^3 with current population.`}\n          >\n            {unlocks.cheeseBrains.find(v => v.name === UnlockName.CHEESE_MONSTER_COLLECTIVE_SENTIENCE)?.description}\n          </Effect>\n          <Effect\n            factor={$totalMonsterDeathsLootBoost}\n            unlocked={$unlocked.cheeseMonsterTotalDeathsBoost}\n            tooltipText={`Scales ^2 with total deaths`}\n          >\n            {unlocks.cheeseBrains.find(v => v.name === UnlockName.CHEESE_MONSTER_TOTAL_DEATHS_BOOST)?.description}\n          </Effect>\n        </EffectComponent>\n      </div>\n    </div>\n  {/if}\n</Window>\n\n<style>\n  .colorText {\n    color: var(--themeColor2);\n  }\n</style>\n","<script lang=\"ts\">\n  import Window from './window-model/Window.svelte'\n  import { formatNumber, formatWhole } from '@gamelogic/utils'\n  import UpgradeButton from '../UpgradeButton.svelte'\n  import { get } from 'svelte/store'\n  import {\n    cummulativeUpgradesToTier,\n    milkFromReset,\n    milkPowerPerSec,\n    milkUpgradeEffect,\n    milkUpgradeTier,\n    highestMilk,\n    upgrades,\n    resource,\n  } from '@store'\n  import { tooltip } from '../tooltips/tooltip'\n\n  function handleMilkReset(): void {\n    const milkGain = Math.floor(get(milkFromReset))\n    if (milkGain < 1) return\n    $resource.milk += milkGain\n  }\n</script>\n\n<!-- <Window title=\"Milk\" themeColor1=\"#bdbdbd\" themeColor2=\"#ffffff\">\n  <div>\n    <span class=\"resourceDisplay\"\n      >You have {formatNumber($resource.milk, 2)} <strong style=\"color:white\">milk</strong> <br />\n    </span>\n  </div>\n\n  <button\n    style=\"width: 250px; \"\n    use:tooltip={{\n      data: 'You keep all your content unlocks. <br/> The reward amount depends on your thoughts and <br/>cheese, and scales ~thoughts^0.25*cheese^0.5.',\n    }}\n    on:click={handleMilkReset}\n  >\n    <strong style=\"color:white\">Lactinity</strong>\n    <br />\n    Reset all previous progress<br />\n    Reward: {formatNumber($milkFromReset, 3)} milk\n  </button>\n\n  <div>\n    <span>Highest milk ever: {formatWhole($highestMilk)} <br /></span>\n    <span>Your highest milk ever is generating {formatWhole($milkPowerPerSec)} milk power/s <br /></span>\n    <span>You have {formatWhole($resource.milkPower)} milk power</span>\n  </div>\n\n  <span>[PLACEHOLDER TITLE]</span>\n  <div class=\"flexRowContainer\">\n    <div class=\"gridColumn\">\n      <UpgradeButton upgradeName=\"milkPowerGain\">\n        Increase milk power gain<br />\n        Currently: 1x\n      </UpgradeButton>\n    </div>\n    <div class=\"gridColumn\">\n      <UpgradeButton upgradeName=\"cheeseMonsterCapacityPerUpgrade\">\n        Cheeseyard Expansions are larger<br />\n        Currently: +10 per Upgrade\n      </UpgradeButton>\n    </div>\n\n    <div class=\"gridColumn\" />\n  </div>\n\n  <span>[PLACEHOLDER TITLE 2]</span>\n  <div class=\"flexRowContainer\">\n    <div class=\"gridColumn\">\n      <UpgradeButton upgradeName=\"milkThoughtsGain\">\n        Boost thought gain V{$milkUpgradeTier[0]}<br />\n        [{$upgrades.milkThoughtsGain.bought - (cummulativeUpgradesToTier[$milkUpgradeTier[0] - 2] ?? 0)}/15 -> V2]<br />\n        Currently: {formatNumber($milkUpgradeEffect[0], 2)}x\n      </UpgradeButton>\n      <UpgradeButton upgradeName=\"milkMoldyCheeseGain\">\n        Improve moldy cheese gain V1<br />\n        [0/15 -> V2]<br />\n        Current Exponent: 1x\n      </UpgradeButton>\n    </div>\n    <div class=\"gridColumn\">\n      <UpgradeButton upgradeName=\"milkCheeseGain\">\n        Boost cheese gain V1<br />\n        [0/15 -> V2]<br />\n        Currently: 1x\n      </UpgradeButton>\n      <UpgradeButton upgradeName=\"milkMonsterGain\">\n        Boost cheese monster spawn rate V1<br />\n        [0/15 -> V2]<br />\n        Currently: {formatNumber($milkUpgradeEffect[3], 2)}x\n      </UpgradeButton>\n    </div>\n\n    <div class=\"gridColumn\" />\n  </div>\n</Window> -->\n<Window title=\"Milk\" themeColor1=\"#bdbdbd\" themeColor2=\"#ffffff\">\n  <div>\n    <span class=\"resourceDisplay\"\n      >You have {formatNumber($resource.milk, 2)} <strong style=\"color:white\">milk</strong> <br />\n    </span>\n  </div>\n\n  <span>\n    This is the end of the demo! <br />\n    Milk would/will be a prestige layer interacting with all of the stuff so far. <br />\n    I would appreciate any feedback, suggestions, etc!\n  </span>\n</Window>\n\n<style>\n  * {\n    --unlockedColor: white\n    --maxedColor: var(--unlockedColor);\n    \n  }\n\n</style>\n","<script lang=\"ts\">\r\n  import { onMount } from 'svelte'\r\n  import Notifications from './components/misc/Notifications.svelte'\r\n  import { saveSaveGame, resetSaveGame, exportSaveGame, importSaveGame } from '@gamelogic/saveload'\r\n  import { ADMIN_MODE, devToolsEnabled, LORCA_OVERRIDE, unlocked } from '@store'\r\n  import DevTools from './components/dev/DevTools.svelte'\r\n  import ToggleUnlocks from './components/dev/ToggleUnlocks.svelte'\r\n\r\n  import ThoughtComponent from './components/game-windows/ThoughtComponent.svelte'\r\n  import CheeseComponent from './components/game-windows/CheeseComponent.svelte'\r\n  import MoldyCheeseComponent from './components/game-windows/MoldyCheeseComponent.svelte'\r\n  import CheeseyardComponent from './components/game-windows/CheeseyardComponent.svelte'\r\n  import MilkComponent from './components/game-windows/MilkComponent.svelte'\r\n  import MilkTreeComponent from './components/game-windows/MilkTreeComponent.svelte'\r\n  import Log from './components/misc/Log.svelte'\r\n\r\n  let secretImage: HTMLElement\r\n  let background: HTMLElement\r\n  let gameWindow: HTMLElement\r\n  let dragWindow: HTMLElement | null = null\r\n  let homeComponent: HTMLElement | null = null\r\n\r\n  // for moving with mouse:\r\n  let offsetX: number, offsetY: number\r\n  let clickedAtX: number, clickedAtY: number\r\n  let clickedAtBackgroundPosX: number, clickedAtBackgroundPosY: number\r\n  let clickedAtSecretImagePosX: number, clickedAtSecretImagePosY: number\r\n\r\n  // for moving with arrow keys:\r\n  let gameWindowLeftInitial: number, gameWindowTopInitial: number\r\n  let backgroundPosXInitial: number, backgroundPosYInitial: number\r\n  let secretImageLeftInitial: number, secretImageTopInitial: number\r\n\r\n  // how much slower the background moves compared to the game window\r\n  const backgroundParallaxRatio = 1 / 8\r\n\r\n  const movingTo = {\r\n    right: false,\r\n    left: false,\r\n    top: false,\r\n    bottom: false,\r\n  }\r\n  let movingWithMouse = false\r\n  let isMoving = false\r\n  const startTime: Record<string, number | null> = {\r\n    xLeft: null,\r\n    xRight: null,\r\n    yUp: null,\r\n    yDown: null,\r\n  }\r\n\r\n  let unlockTogglesShown = false\r\n  let isDarkMode: boolean\r\n\r\n  onMount(() => {\r\n    homeComponent = gameWindow.querySelector('#thoughtComponent')\r\n    returnToHome()\r\n    background.style.backgroundPositionX = '0px'\r\n    background.style.backgroundPositionY = '0px'\r\n\r\n    // checks if dark mode is enabled in the browser:\r\n    isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\r\n    // sets the correct theme on the root (html) tag:\r\n    window.document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light')\r\n\r\n    // return false if key is 'Enter'\r\n    // window.document.onkeydown = (e: KeyboardEvent) => e.key !== 'Enter'\r\n\r\n    window.document.addEventListener('keypress', (e: KeyboardEvent) => {\r\n      if (!$ADMIN_MODE) return\r\n      if (e.key === 'f') $LORCA_OVERRIDE = !$LORCA_OVERRIDE\r\n      if (e.key === 'g') $devToolsEnabled = !$devToolsEnabled\r\n      if (e.key === 'u') unlockTogglesShown = !unlockTogglesShown\r\n    })\r\n    window.document.addEventListener('keydown', (e: KeyboardEvent) => {\r\n      if (e.key === 'ArrowRight' && !movingTo.right) movingTo.right = true\r\n      if (e.key === 'ArrowLeft' && !movingTo.left) movingTo.left = true\r\n      if (e.key === 'ArrowUp' && !movingTo.top) movingTo.top = true\r\n      if (e.key === 'ArrowDown' && !movingTo.bottom) movingTo.bottom = true\r\n\r\n      if (Object.values(movingTo).includes(true) && !isMoving) {\r\n        isMoving = true\r\n        startTime.xLeft = null\r\n        startTime.xRight = null\r\n        startTime.yUp = null\r\n        startTime.yDown = null\r\n        requestAnimationFrame(moveWindow)\r\n      }\r\n    })\r\n    window.document.addEventListener('keyup', (e: KeyboardEvent) => {\r\n      if (e.key === 'ArrowRight' && movingTo.right) movingTo.right = false\r\n      if (e.key === 'ArrowLeft' && movingTo.left) movingTo.left = false\r\n      if (e.key === 'ArrowUp' && movingTo.top) movingTo.top = false\r\n      if (e.key === 'ArrowDown' && movingTo.bottom) movingTo.bottom = false\r\n\r\n      if (Object.values(movingTo).every(v => v === false)) isMoving = false\r\n    })\r\n\r\n    // drag the entire game window around freely:\r\n    window.document.onmousedown = (e: MouseEvent): void => {\r\n      // keep eg. sliders draggable without moving the window\r\n      if ((e.target as HTMLElement).classList.contains('draggable')) return\r\n      movingWithMouse = true\r\n      dragWindow = gameWindow\r\n      clickedAtX = e.pageX\r\n      clickedAtY = e.pageY\r\n      offsetX = clickedAtX - gameWindow.offsetLeft\r\n      offsetY = clickedAtY - gameWindow.offsetTop\r\n      clickedAtBackgroundPosX = parseInt(background.style.backgroundPositionX)\r\n      clickedAtBackgroundPosY = parseInt(background.style.backgroundPositionY)\r\n      clickedAtSecretImagePosX = parseInt(secretImage.style.left)\r\n      clickedAtSecretImagePosY = parseInt(secretImage.style.top)\r\n    }\r\n    window.document.onmousemove = (e: MouseEvent): void => {\r\n      if (dragWindow === null) return\r\n      dragWindow.style.left = e.pageX - offsetX + 'px'\r\n      dragWindow.style.top = e.pageY - offsetY + 'px'\r\n\r\n      background.style.backgroundPositionX =\r\n        clickedAtBackgroundPosX + (e.pageX - clickedAtX) * backgroundParallaxRatio + 'px'\r\n      background.style.backgroundPositionY =\r\n        clickedAtBackgroundPosY + (e.pageY - clickedAtY) * backgroundParallaxRatio + 'px'\r\n\r\n      secretImage.style.left = clickedAtSecretImagePosX + (e.pageX - clickedAtX) * backgroundParallaxRatio + 'px'\r\n      secretImage.style.top = clickedAtSecretImagePosY + (e.pageY - clickedAtY) * backgroundParallaxRatio + 'px'\r\n    }\r\n    window.document.onmouseup = (): void => {\r\n      movingWithMouse = false\r\n      dragWindow = null\r\n    }\r\n  })\r\n\r\n  function resetInitialPositionsX(): void {\r\n    gameWindowLeftInitial = gameWindow.offsetLeft\r\n    secretImageLeftInitial = secretImage.offsetLeft\r\n    backgroundPosXInitial = parseInt(background.style.backgroundPositionX)\r\n  }\r\n  function resetInitialPositionsY(): void {\r\n    gameWindowTopInitial = gameWindow.offsetTop\r\n    secretImageTopInitial = secretImage.offsetTop\r\n    backgroundPosYInitial = parseInt(background.style.backgroundPositionY)\r\n  }\r\n\r\n  function moveWindow(currentTime: number): void {\r\n    if (movingWithMouse) return\r\n\r\n    if (movingTo.right && !movingTo.left) {\r\n      if (startTime.xRight === null) {\r\n        resetInitialPositionsX()\r\n        startTime.xRight = currentTime\r\n      }\r\n      const elapsed = currentTime - startTime.xRight\r\n      gameWindow.style.left = gameWindowLeftInitial - 1 * elapsed + 'px'\r\n      secretImage.style.left = secretImageLeftInitial - backgroundParallaxRatio * elapsed + 'px'\r\n      background.style.backgroundPositionX = backgroundPosXInitial - backgroundParallaxRatio * elapsed + 'px'\r\n    } else {\r\n      startTime.xRight = null\r\n    }\r\n\r\n    if (movingTo.left && !movingTo.right) {\r\n      if (startTime.xLeft === null) {\r\n        resetInitialPositionsX()\r\n        startTime.xLeft = currentTime\r\n      }\r\n      const elapsed = currentTime - startTime.xLeft\r\n      gameWindow.style.left = gameWindowLeftInitial + 1 * elapsed + 'px'\r\n      secretImage.style.left = secretImageLeftInitial + backgroundParallaxRatio * elapsed + 'px'\r\n      background.style.backgroundPositionX = backgroundPosXInitial + backgroundParallaxRatio * elapsed + 'px'\r\n    } else {\r\n      startTime.xLeft = null\r\n    }\r\n\r\n    if (movingTo.top && !movingTo.bottom) {\r\n      if (startTime.yUp === null) {\r\n        resetInitialPositionsY()\r\n        startTime.yUp = currentTime\r\n      }\r\n      const elapsed = currentTime - startTime.yUp\r\n      gameWindow.style.top = gameWindowTopInitial + 1 * elapsed + 'px'\r\n      secretImage.style.top = secretImageTopInitial + backgroundParallaxRatio * elapsed + 'px'\r\n      background.style.backgroundPositionY = backgroundPosYInitial + backgroundParallaxRatio * elapsed + 'px'\r\n    } else {\r\n      startTime.yUp = null\r\n    }\r\n\r\n    if (movingTo.bottom && !movingTo.top) {\r\n      if (startTime.yDown === null) {\r\n        resetInitialPositionsY()\r\n        startTime.yDown = currentTime\r\n      }\r\n      const elapsed = currentTime - startTime.yDown\r\n      gameWindow.style.top = gameWindowTopInitial - 1 * elapsed + 'px'\r\n      secretImage.style.top = secretImageTopInitial - backgroundParallaxRatio * elapsed + 'px'\r\n      background.style.backgroundPositionY = backgroundPosYInitial - backgroundParallaxRatio * elapsed + 'px'\r\n    } else {\r\n      startTime.yDown = null\r\n    }\r\n\r\n    if (isMoving) requestAnimationFrame(moveWindow)\r\n  }\r\n\r\n  function returnToHome(): void {\r\n    if (homeComponent !== null) {\r\n      const gameRect = gameWindow.getBoundingClientRect()\r\n      const homeRect = homeComponent.getBoundingClientRect()\r\n      const offset = {\r\n        left: homeRect.left - gameRect.left,\r\n        top: homeRect.top - gameRect.top,\r\n      }\r\n\r\n      const beforeX = gameWindow.offsetLeft\r\n      const beforeY = gameWindow.offsetTop\r\n      gameWindow.style.left = `calc(50% - ${homeRect.width / 2 + offset.left}px)`\r\n      gameWindow.style.top = `calc(50% - ${homeRect.height / 2 + offset.top}px)`\r\n      const afterX = gameWindow.offsetLeft\r\n      const afterY = gameWindow.offsetTop\r\n\r\n      background.style.backgroundPositionX =\r\n        parseInt(background.style.backgroundPositionX) + (afterX - beforeX) * backgroundParallaxRatio + 'px'\r\n      background.style.backgroundPositionY =\r\n        parseInt(background.style.backgroundPositionY) + (afterY - beforeY) * backgroundParallaxRatio + 'px'\r\n      secretImage.style.left = parseInt(secretImage.style.left) + (afterX - beforeX) * backgroundParallaxRatio + 'px'\r\n      secretImage.style.top = parseInt(secretImage.style.top) + (afterY - beforeY) * backgroundParallaxRatio + 'px'\r\n    }\r\n  }\r\n\r\n  function switchTheme(): void {\r\n    isDarkMode = !isDarkMode\r\n    window.document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light')\r\n  }\r\n\r\n  let saveDataString: string\r\n  function handleExport(): void {\r\n    saveDataString = exportSaveGame()\r\n  }\r\n  function handleImport(): void {\r\n    // ideally check if saveDataString is of type SaveData\r\n    if (saveDataString !== null) importSaveGame(saveDataString)\r\n  }\r\n  function showCredits(): void {\r\n    console.log('TODO Credit Modal')\r\n    // Background: https://www.svgbackgrounds.com/\r\n  }\r\n</script>\r\n\r\n<main>\r\n  <DevTools />\r\n  {#if unlockTogglesShown}\r\n    <ToggleUnlocks />\r\n  {/if}\r\n  <!-- Add the Notifications component so messages appear on every page -->\r\n  <Notifications />\r\n\r\n  <div id=\"saveload\">\r\n    <button on:click={switchTheme}>Theme: {isDarkMode ? 'Dark' : 'Light'}</button>\r\n    <button on:click={returnToHome}>Home</button>\r\n    <!-- <input type=\"string\" bind:value={saveDataString} />\r\n    <button on:click={handleExport}>Export</button>\r\n    <button on:click={handleImport}>Import</button> -->\r\n    <button on:click={saveSaveGame}>Save</button>\r\n    <button on:click={resetSaveGame}>Reset</button>\r\n    <!-- <button on:click={showCredits}>Credits</button> -->\r\n  </div>\r\n\r\n  <div id=\"display\" bind:this={background}>\r\n    <img\r\n      src=\"assets/thonk.png\"\r\n      alt=\"thonk\"\r\n      draggable=\"false\"\r\n      style=\"position: absolute; left: -1500px; top: -800px; scale: 0.25\"\r\n      bind:this={secretImage}\r\n    />\r\n    <div id=\"game\" bind:this={gameWindow}>\r\n      <div id=\"thoughtComponent\"><ThoughtComponent /></div>\r\n      {#if $unlocked.switzerland || $LORCA_OVERRIDE}\r\n        <div id=\"cheeseComponent\"><CheeseComponent /></div>\r\n      {/if}\r\n      {#if $unlocked.moldyCheese || $LORCA_OVERRIDE}\r\n        <div id=\"moldyCheeseComponent\"><MoldyCheeseComponent /></div>\r\n      {/if}\r\n      {#if $unlocked.cheeseyard || $LORCA_OVERRIDE}\r\n        <div id=\"cheeseyardComponent\"><CheeseyardComponent /></div>\r\n      {/if}\r\n      {#if $unlocked.milk || $LORCA_OVERRIDE}\r\n        <div id=\"milkComponent\"><MilkComponent /></div>\r\n      {/if}\r\n      <!-- {#if true || $LORCA_OVERRIDE}\r\n        <div id=\"milkTreeComponent\"><MilkTreeComponent /></div>\r\n      {/if} -->\r\n    </div>\r\n  </div>\r\n</main>\r\n\r\n<style>\r\n  * {\r\n    --x0: 2; /* Column of home*/\r\n    --y0: 2; /* Row of home*/\r\n  }\r\n\r\n  #display {\r\n    position: fixed;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 20px;\r\n    background: url('/cogito-cosmos/assets/endless-constellation.svg'), url('/assets/endless-constellation.svg');\r\n    /* background-color: var(--background-color); */\r\n  }\r\n  /* #game {\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: var(--window-gap);\r\n  } */\r\n  #game {\r\n    position: absolute;\r\n    display: grid;\r\n    /* grid-template-columns: repeat(5, auto);\r\n    grid-template-rows: repeat(5, auto); */\r\n    gap: var(--window-gap);\r\n  }\r\n  #thoughtComponent {\r\n    grid-row-start: var(--y0);\r\n    grid-column-start: var(--x0);\r\n  }\r\n  #cheeseComponent {\r\n    grid-row-start: var(--y0);\r\n    grid-column-start: calc(var(--x0) + 1);\r\n  }\r\n  #moldyCheeseComponent {\r\n    grid-row-start: var(--y0);\r\n    grid-column-start: calc(var(--x0) + 2);\r\n  }\r\n  #cheeseyardComponent {\r\n    grid-row-start: var(--y0);\r\n    grid-column-start: calc(var(--x0) + 3);\r\n  }\r\n  #milkComponent {\r\n    grid-row-start: calc(var(--y0) - 1);\r\n    grid-column-start: calc(var(--x0));\r\n  }\r\n  #milkTreeComponent {\r\n    grid-row-start: calc(var(--y0) - 1);\r\n    grid-column-start: calc(var(--x0) - 1);\r\n  }\r\n\r\n  #saveload {\r\n    position: fixed;\r\n    z-index: 10;\r\n    top: 0;\r\n    right: 0;\r\n    display: flex;\r\n    gap: 0;\r\n  }\r\n</style>\r\n","import { get } from 'svelte/store';\nimport { totalMonsterDeathsLootBoost, cheeseMonsterSpawnrate, cheeseMonsterDeathrate, cheeseMonsterCapacity, cheeseMonsterDropRate, cheeseMonsterLootAmount, totalCheeseMonsterDeaths, } from '@store';\nlet accumulateSecond = 0;\nexport function handleCheeseMonster(resource, deltaTimeSeconds) {\n    const cap = get(cheeseMonsterCapacity);\n    if (resource.cheeseMonster < cap) {\n        const births = get(cheeseMonsterSpawnrate) * deltaTimeSeconds;\n        resource.cheeseMonster += births;\n    }\n    else\n        resource.cheeseMonster = cap;\n    const deathrate = get(cheeseMonsterDeathrate);\n    if (deathrate > 0 && resource.cheeseMonster > 0) {\n        if (resource.cheeseMonster > 30) {\n            // for many monsters, use the statistical average deathrate\n            const deaths = resource.cheeseMonster * deathrate * deltaTimeSeconds;\n            resource.cheeseMonster -= deaths;\n            totalCheeseMonsterDeaths.update($total => $total + deaths);\n            resource.cheeseBrains += calculateMonsterLoot(deaths);\n            // TODO: calculate loot on death(s)\n        }\n        else {\n            // for just a few monsters, use random chance for deaths for variance\n            accumulateSecond += deltaTimeSeconds;\n            if (accumulateSecond >= 1) {\n                for (let i = 0; i < resource.cheeseMonster; i++) {\n                    if (Math.random() < deathrate) {\n                        resource.cheeseMonster--;\n                        // TODO: calculate loot on death\n                        totalCheeseMonsterDeaths.update($total => $total + 1);\n                        resource.cheeseBrains += calculateMonsterLootSingle();\n                    }\n                }\n                accumulateSecond = 0;\n            }\n        }\n    }\n}\nfunction calculateMonsterLoot(deaths) {\n    return deaths * get(cheeseMonsterLootAmount) * get(cheeseMonsterDropRate) * get(totalMonsterDeathsLootBoost);\n}\nfunction calculateMonsterLootSingle() {\n    if (Math.random() >= get(cheeseMonsterDropRate))\n        return 0;\n    return 1 * get(cheeseMonsterLootAmount) * get(totalMonsterDeathsLootBoost);\n}\n","import { get } from 'svelte/store';\nimport { handleCheeseMonster } from './cheeseMonster';\nimport { lastSaved as lastSavedStore, resource, highestMilk, mcHalfLifeSeconds, thoughtsPerSec, milkPowerPerSec, totalTimePlayed, } from '@store';\nimport { saveSaveGame } from './saveload';\n// natural log of 2\nconst LN2 = 0.69314718056;\n/**\n * Reference to some stores.\n * We use the subscribe function so if the store is updated our local instance will also update.\n */\nlet lastSaved;\nlastSavedStore.subscribe(m => (lastSaved = m));\n/**\n * how often to run the loop. 200ms = 5 times per second\n * 200ms or 100ms is usually fast enough to feel responsive without wasting too much CPU time\n */\nconst GAME_INTERVAL = 200;\nconst fastFowardFactor = 1;\n/**\n * How often to auto save the game. 60_000 = 60 seconds.\n */\nconst autoSaveTime = 30000;\n/**\n * A reference to the interval that can be used to stop it if we need to\n */\nlet interval;\n/**\n * This function will start the game loop running at the desired rate, and save a reference to the interval so it can be stopped later\n */\nexport function startGameLoop() {\n    /* console.log('Repopulating transient values...')\n    repopulateValues() */\n    // calculateOfflineProgress()\n    lastSaved = Date.now();\n    console.log('Starting the game loop...');\n    interval = setInterval(gameLoop, GAME_INTERVAL);\n}\nexport function stopGameLoop() {\n    clearInterval(interval);\n}\n// some datetime values we will be using to calculate how much time has passed\nlet lastRunTime = Date.now();\n/**\n * the time difference in seconds since the last time the loop ran\n */\nlet deltaTimeSeconds = 0;\n/**\n * The game loop function that runs multiple times per second in the background.\n */\nfunction gameLoop() {\n    const currentTime = Date.now();\n    // if lastSaved was more than 60 seconds ago we should save the game DEACTIVATED!!!!\n    if (currentTime - lastSaved > autoSaveTime) {\n        lastSaved = currentTime;\n        saveSaveGame();\n        // sendMessage('Game auto-saved')\n    }\n    // calculate deltaT based on the current time and the last run time\n    // we are using Math.max and Math.min to make sure deltaT is between 0 and 1 seconds\n    deltaTimeSeconds = Math.max(Math.min((currentTime - lastRunTime) / 1000, 1), 0);\n    lastRunTime = currentTime;\n    // Now we know what deltaT is we can update the game\n    gameUpdate(deltaTimeSeconds);\n}\n/**\n * Function to update all game data based on time.\n * This is where all idle calculations should start so they can be\n * used by the main loop and the offline progress function.\n * (Assumes that the production can be linearly extrapolated)\n * @param deltaTimeSeconds time in seconds since last update\n */\nfunction gameUpdate(deltaTimeSeconds) {\n    deltaTimeSeconds *= fastFowardFactor;\n    resource.update($resource => {\n        $resource.thoughts += get(thoughtsPerSec) * deltaTimeSeconds;\n        // moldy cheese decay (linear extrapolation)\n        // moldyCheese.update(value => value * (1 - LN2/get(mcHalfLifeSeconds) * deltaTimeSeconds))\n        // OR: moldy cheese decay (exact)\n        // if statement so while offline for longer than 10s you dont lose moldy cheese (?)\n        $resource.moldyCheese *= Math.exp((-LN2 * deltaTimeSeconds) / get(mcHalfLifeSeconds));\n        handleCheeseMonster($resource, deltaTimeSeconds);\n        if ($resource.milk > get(highestMilk))\n            highestMilk.set($resource.milk);\n        $resource.milkPower += get(milkPowerPerSec) * deltaTimeSeconds;\n        return $resource;\n    });\n    totalTimePlayed.update($value => $value + deltaTimeSeconds);\n}\n/**\n * Function to calculate the offline progress\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction calculateOfflineProgress() {\n    console.log('Calculating offline progess...');\n    // calculate time in seconds since last saved\n    const currentTime = Date.now();\n    const offlineDeltaTimeSeconds = Math.max((currentTime - lastSaved) / 1000, 0);\n    console.log(`Offline for ${offlineDeltaTimeSeconds} seconds`);\n    // perform the game update for the total time\n    gameUpdate(offlineDeltaTimeSeconds);\n}\n/* function repopulateValues() {\n  for (let id in upgrades) {\n    upgrades[id].cost *= Math.pow(upgrades[id].costMultiplier, get(upgradesBought)[id])\n  }\n} */\n","import App from './App.svelte';\nimport { startGameLoop } from './gamelogic/gameloop';\nconst app = new App({\n    target: document.body,\n});\n/**\n *  Start the game loop in the background\n * \tThis also calculates the offline progress\n */\nstartGameLoop();\nexport default app;\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","set_store_value","ret","set","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","setProperty","toggle_class","toggle","classList","HtmlTag","constructor","this","e","n","html","h","m","nodeName","t","innerHTML","Array","from","childNodes","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","rule","str","hash","charCodeAt","doc","stylesheet","__svelte_stylesheet","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","fix_position","getComputedStyle","position","width","height","getBoundingClientRect","left","top","transform","add_transform","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","then","fix_and_outro_and_destroy_block","lookup","outro_and_destroy_block","create_component","mount_component","customElement","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","rest","hydrate","nodes","children","l","SvelteComponent","$destroy","$on","index","splice","$set","$$props","obj","$$set","keys","cubicOut","sineInOut","cos","PI","flip","to","ox","oy","transformOrigin","parseFloat","dx","dy","sqrt","u","y","sx","sy","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","messageQueue","idNumber","Message","message","id","fade","linear","opacity","fly","target_opacity","od","slide","padding_top","paddingTop","padding_bottom","paddingBottom","margin_top","marginTop","margin_bottom","marginBottom","border_top_width","borderTopWidth","border_bottom_width","borderBottomWidth","min","right","bottom","start_time","running","started","old_blocks","get_key","dynamic","list","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","will_move","did_move","first","new_block","old_block","new_key","old_key","suffixes","OOMs","formatNumber","decimals","toExponential","replace","toFixed","formatWhole","formatResourceName","formatTime","sec","digits","hours","floor","minutes","seconds","toString","padStart","noRef","JSON","parse","stringify","checkBoolForNum","bool","num","or","makeStore","initialState","reset","refresh","$store","resource","thoughts","cheese","moldyCheese","cheeseMonster","cheeseBrains","milk","milkPower","milkPoints","_a","_Upgrade_id","Upgrade","cost","costMultiplier","maxBuy","bought","_b","_c","_d","receiver","state","TypeError","call","__classPrivateFieldSet","__classPrivateFieldGet","upgradesInitial","thoughtAcceleration","thoughtJerk","thoughtBoostStrength","thoughtBoostDuration","thoughtBoostStack","cheeseQueueLength","cheeseYield","cheeseThoughtMult","cheeseQueueOverclockingCost","moldyCheeseConversionExponent","moldyCheeseHalfLife","moldyCheeseChance","cheeseMonsterSpawnrate","cheeseMonsterCapacity","cheeseMonsterDropRate","cheeseMonsterLoot","cheeseMonsterSentience","cheeseMonsterMoldiness","milkPowerGain","cheeseMonsterCapacityPerUpgrade","milkThoughtsGain","milkCheeseGain","milkMoldyCheeseGain","milkMonsterGain","upgrades","UnlockName","unlocks","THINK_PASSIVELY","title","description","tooltipText","THINK_FASTER","availableAt","THOUGHT_BOOST","THOUGHTS_50_PERCENT","SWITZERLAND","THOUGHT_BOOST_STACK","CHEESE_QUEUE","MOLDY_CHEESE","MILK","THOUGHT_JERK","CHEESE_QUEUE_OVERCLOCKING","CHEESE_QUEUE_LENGTH_BOOST","CHEESE_BOOST","CHEESE_QUEUE_COST_DIVIDE","CHEESE_CYCLE_ACCELERATOR","CHEESE_MODES","CHEESE_CYCLES_BOOST_THOUGHTS","MOLDY_CHEESE_BYPRODUCT","CHEESEYARD","MANUAL_MOLDY_CHEESE_CONVERSION_BOOST","CHEESEYARD_MOLD_UPGRADE","MONSTER_BRAIN_WAVE_CONTROLLER","MOLDY_CHEESE_CYCLE_DURATION_BOOST","MOLDY_CHEESE_HALFLIFE_BOOST","CHEESE_MONSTER_MASSACRE","CHEESE_MONSTER_COLLECTIVE_SENTIENCE","CHEESE_MONSTER_TOTAL_DEATHS_BOOST","unlocked","enumme","START","convertEnumToFlagObject","MilkBoost","milkBoostActive","thoughtAccelBoostsItself","improveFormulaCheeseBoostsThoughts","improveFormulaCheeseQueueLengthBoostsCheese","improveFormulaTotalCheeseCyclesBoostsThoughts","unlockAdditionalUpgradesCheeseProductionTime","mCByproductBoostedByMCHalflife","cheeseCyclesPerCheeseModeBoostCheese","cheeseUpgradeProductionTimeGivesFreeCheeseUpgradeYield","thoughtGainBoostedByThoughts","milkGainMultiplied","unspentMilkBoostsCheese","gainPercentageOfPotentialMilk","massacreEffectBoosted","collectiveSentienceBoosted","betterScalingTotalCheeseMonsterDeathsLootBoost","unspentCheeseBrainsBoostMonsterResourceGeneration","ThoughtAccelBoostsItself","ImproveFormulaCheeseBoostsThoughts","ImproveFormulaCheeseQueueLengthBoostsCheese","ImproveFormulaTotalCheeseCyclesBoostsThoughts","UnlockAdditionalUpgradesCheeseProductionTime","MCByproductBoostedByMCHalflife","CheeseCyclesPerCheeseModeBoostCheese","CheeseUpgradeProductionTimeGivesFreeCheeseUpgradeYield","ThoughtGainBoostedByThoughts","MilkGainMultiplied","UnspentMilkBoostsCheese","MassacreEffectBoosted","CollectiveSentienceBoosted","BetterScalingTotalCheeseMonsterDeathsLootBoost","UnspentCheeseBrainsBoostMonsterResourceGeneration","GainPercentageOfPotentialMilk","ADMIN_MODE","LORCA_OVERRIDE","devToolsEnabled","lastSaved","totalTimePlayed","currentThoughtBoost","currentThoughtBoostTime","currentCheeseQueue","cheeseQueueActive","cheeseQueueOverclockLvl","cheeseQueueTotalCycles","cheeseFactoryMode","totalCheeseMonsterDeaths","brainMode","highestMilk","buy","upgrade","checkoutCost","totalEffectMultiplier","effectMultiplierInTier","tier","toNextTier","upgradesToNextTier","tierUpMultipler","$resource","makeUpgradesStore","thoughtBoostMax","$upgrades","pow","thoughtBoostMaxStacks","thoughtsPerSecBase","$unlocked","fromBasicUpgrades","thinkPassively","thoughtMultFromUnlocks","thoughts50Percent","log","maxCheeseQueue","cheeseCyclesThoughtMult","$cheeseQueueTotalCycles","cheeseCyclesBoostThoughts","cheeseModeStats","meticulous","yield","nominal","warpSpeed","cheeseModeFactor","$cheeseFactoryMode","cheeseQueueCostDivideBy","cheeseQueueOverclockSpeedMult","$cheeseQueueOverclockLvl","cheeseQueueOverclockCostMult","cheeseCycleAcceleratorFactor","cheeseCycleAccelerator","cheeseBoostFactorYield","$currentThoughtBoost","cheeseBoost","mcHalfLifeSeconds","mcConversionCooldownMS","manualMoldyCheeseConversionBoost","mcConversionExponent","cheeseMonsterBrainModeResourceFactors","peaceful","neutral","destructive","resourceFactorFromBrainMode","$brainMode","cheeseyard","cheeseMonsterDeathRateStats","cheeseMonsterDeathrate","totalMonsterDeathsLootBoost","$totalDeaths","cheeseMonsterTotalDeathsBoost","cheeseMonsterCollectiveSentienceMultiplier","cheeseMonsterCollectiveSentience","monsterThoughtFactor","monsterMoldyCheeseFactor","cheeseCycleBase","$cheeseQueueOverclockCostMult","$cheeseQueueCostDivideBy","cheeseQueueLengthBoostFactor","$maxCheeseQueue","cheeseQueueLengthBoost","mcHalflifeBoostFactor","$mcHalfLifeSeconds","moldyCheeseHalflifeBoost","cheeseCycleBatchSize","$cheeseCycleBaseYield","$cheeseQueueLengthBoostFactor","$cheeseBoostFactorYield","$cheeseModeFactor","$mcHalflifeBoostFactor","cheeseCycleDuration","$cheeseCycleBaseDuration","$cheeseQueueOverclockSpeedMult","$cheeseCycleAcceleratorFactor","cheeseCycleCost","$cheeseCycleBaseCost","mcCycleDurationBoostFactor","$cheeseMonsterCapacityPerUpgrade","cheeseMonsterDeathsPerSec","$cheeseMonsterDeathrate","cheeseMonsterMassacreMultiplier","$cheeseMonsterDeathsPerSec","cheeseMonsterMassacre","cheeseMonsterLootAmount","$cheeseMonsterMassacreMultiplier","approxCheeseBrainsPerSec","$cheeseMonsterDropRate","$cheeseMonsterLootAmount","$totalMonsterDeathsLootBoost","monsterThoughtMult","$monsterThoughtFactor","$resourceFactorFromBrainMode","$cheeseMonsterCollectiveSentienceMultiplier","monsterMoldyCheeseMult","$monsterMoldyCheeseFactor","mcByproductAmount","$mcConversionExponent","$monsterMoldyCheeseMult","$cheeseCycleBatchSize","$mcCycleDurationBoostFactor","moldyCheeseCycleDurationBoost","mcManualConversionAmount","thoughtsPerSec","$factors","reduce","prev","curr","milkPowerPerSec","$highestMilk","cummulativeUpgradesToTier","milkUpgradeTier","console","upgradeBought","milkUpgradeEffectFactor","$milkUpgradeTier","entries","storageName","SaveData","updateFromStores","version","saveSaveGame","saveData","store.lastSaved","localStorage","setItem","error","resetSaveGame","resetStores","notification","setTimeout","sendMessage","recalculateStores","store.upgrades","getItem","saveDataFromLocalStorage","fromStorage","master","propertiesMaster","getOwnPropertyNames","propertiesFromStorage","prop","innerProp","Reflect","deleteProperty","dataMigrate","hydrateStores","loadSaveGame","toggleUnlock","themeColor1","themeColor2","Direction","tooltip","tooltipComponent","TooltipConstructor","Component","Tooltip","tooltipData","mousePressed","tooltipShown","mouseEnter","_event","rect","parentElement","DOMRect","offsetParent","RIGHT","body","mouseLeave","mouseMove","mouseDown","mouseUp","Boost","costColor","Unlock","Mechanic","Effect","UnlockTooltip","unlock","tempCount","folderName","upgradeName","buyMaxUpgrades","btnUnlocked","resourceName","canAfford","isMaxed","upgradesBought","res","costMult","numUpgradesAffordable","totalPrice","buyUpgrade","factor","find","thoughtBoost","thinkFaster","myReq","thoughtBoostCurrentStacks","lastTime","animateThoughtBoost","currentTime","deltaT","$currentThoughtBoostTime","ceil","$thoughtBoostDuration","$thoughtBoostMax","thoughtBoostStrengthBought","thoughtAccelDisplay","$thoughtsPerSec","$thoughtsPerSecBase","thoughtJerkDisplay","$thoughtBoostStrengthBought","$thoughtBoostMaxStacks","cancelAnimationFrame","v","container","label","getPropertyValue","onChange","cheeseModes","CheeseFactoryProtocol","cheeseQueue","cheeseQueueOverclocking","cheeseQueueCostDivide","cheeseCycleBaseYield","cheeseCycleBaseDuration","cheeseCycleBaseCost","cheeseBarProgress","animateCheeseBar","deltaTimeMillis","$cheeseCycleDuration","handleCheeseGeneration","$cheeseQueueActive","$currentCheeseQueue","$cheeseCycleCost","moldyCheeseByproduct","random","$moldyCheeseChance","$mcByproductAmount","cheesePerSecFromQueue","cdTimer","intervalId","conversionOnCD","$mcConversionCooldownMS","$mcManualConversionAmount","clearInterval","setInterval","dt","MonsterBrainWaveController","cheeseyardMoldUpgrade","controllerUnlocked","monsterBrainWaveController","switzerland","secretImage","background","gameWindow","offsetX","offsetY","clickedAtX","clickedAtY","clickedAtBackgroundPosX","clickedAtBackgroundPosY","clickedAtSecretImagePosX","clickedAtSecretImagePosY","gameWindowLeftInitial","gameWindowTopInitial","backgroundPosXInitial","backgroundPosYInitial","secretImageLeftInitial","secretImageTopInitial","dragWindow","homeComponent","backgroundParallaxRatio","movingTo","movingWithMouse","isMoving","startTime","xLeft","xRight","yUp","yDown","isDarkMode","unlockTogglesShown","resetInitialPositionsX","offsetLeft","parseInt","backgroundPositionX","resetInitialPositionsY","offsetTop","backgroundPositionY","moveWindow","elapsed","returnToHome","gameRect","homeRect","offset","beforeX","beforeY","afterX","afterY","querySelector","matchMedia","matches","documentElement","$ADMIN_MODE","$LORCA_OVERRIDE","$devToolsEnabled","includes","every","onmousedown","contains","pageX","pageY","onmousemove","onmouseup","accumulateSecond","handleCheeseMonster","deltaTimeSeconds","cap","births","deathrate","deaths","$total","calculateMonsterLoot","calculateMonsterLootSingle","LN2","lastRunTime","gameLoop","exp","$value","gameUpdate","app"],"mappings":"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"}